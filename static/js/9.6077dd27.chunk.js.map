{"version":3,"sources":["components/AppPage.tsx","domain/empresa/EmpresaService.ts","components/AppSaveButton.tsx","domain/linha/LinhaService.ts","pages/Linha/HorarioDaSemanaForm.tsx","../node_modules/reactstrap/es/FormGroup.js","components/AppAutocomplete.tsx","domain/cidade/cidadeServices.ts","pages/Linha/LinhaCadastro.tsx"],"names":["AppPage","header","children","alertModel","className","xs","sm","buscaEmpresasPaginadas","pageable","query","qs","stringify","vouDeVanApi","get","EMPRESAS","removeMascaraCNPJ","cnpj","replaceAll","removeMascaraTelefone","cadastraEmpresa","empresa","telefone","post","editaEmpresa","empresaId","uri","put","deletaEmpresa","delete","buscaEmpresaPorId","buscaEmpresaParaAutocomplete","termo","a","response","data","map","value","id","label","nome","AppSaveButton","isSubmitting","type","color","disabled","buscaLinhasPaginadas","params","cadastraLinha","model","editaLinha","buscaLinhaParaEditar","deletaLinha","linhaId","LINHAS","HorarioDaSemanaForm","formModel","diaDaSemana","key","HorarioComponent","horarios","name","insert","push","remove","length","partida","chegada","horario","index","onClick","placeholder","maxLength","propTypes","PropTypes","node","row","bool","check","inline","tag","tagPropType","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","AppAutocomplete","loadOptions","useField","field","helpers","cacheOptions","onChange","option","setValue","onBlur","buscaCidadePorNomeParaSelect","cidade","estadoUf","LinhaCadastro","history","useState","undefined","alert","setAlert","initialValues","rotaOrigemId","rotaDestinoId","segunda","terca","quarta","quinta","sexta","sabado","domingo","onSubmit","linhaFormModel","setSubmitting","then","catch","e","alertFromAxiosError","handleSubmit","values","Form","EmpresaAutoComplete","RotaDaLinhaComponent","Row","Col","Label","for"],"mappings":"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","file":"static/js/9.6077dd27.chunk.js","sourcesContent":["import React, {FC} from \"react\";\r\nimport {Card, CardBody, CardHeader, Col, Row} from \"reactstrap\";\r\nimport AlertModel from \"../common/AlertModel\";\r\nimport AppAlert from \"./AppAlert\";\r\n\r\n\r\ninterface Props {\r\n  header: JSX.Element,\r\n  alertModel?: AlertModel\r\n}\r\n\r\n\r\nconst AppPage: FC<Props> = ({header, children, alertModel}) => {\r\n  return (<div className=\"animated fadeIn\">\r\n    <Row>\r\n      <Col xs=\"12\" sm=\"12\">\r\n        <Card>\r\n          <CardHeader>\r\n            {header}\r\n          </CardHeader>\r\n          <CardBody>\r\n            <AppAlert alertModel={alertModel}/>\r\n            {children}\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </div>);\r\n}\r\n\r\n\r\nexport default AppPage;\r\n\r\n","import vouDeVanApi from '../../common/vouDeVanApi';\r\n\r\nimport qs from 'qs';\r\nimport EmpresaFormModel from './EmpresaFormModel';\r\nimport IPage, {IPageRequest} from '../../common/IPage';\r\nimport EmpresaListagemModel from './EmpresaListagemModel';\r\nimport EmpresaAutocompleteModel from \"./EmpresaAutocompleteModel\";\r\n\r\n\r\nconst EMPRESAS = '/empresas';\r\n\r\n\r\nexport function buscaEmpresasPaginadas(pageable: IPageRequest) {\r\n  const query = qs.stringify(pageable);\r\n  return vouDeVanApi.get<IPage<EmpresaListagemModel>>(EMPRESAS + '?' + query);\r\n}\r\n\r\nfunction removeMascaraCNPJ(cnpj: string) {\r\n  return cnpj.replaceAll('-', '')\r\n    .replaceAll('/', '')\r\n    .replaceAll('.', '');\r\n}\r\n\r\nfunction removeMascaraTelefone(cnpj: string) {\r\n  return cnpj.replaceAll('-', '')\r\n    .replaceAll(' ', '')\r\n    .replaceAll(')', '')\r\n    .replaceAll('(', '');\r\n}\r\n\r\nexport function cadastraEmpresa(empresa: EmpresaFormModel) {\r\n\r\n  empresa.cnpj = removeMascaraCNPJ(empresa.cnpj);\r\n  empresa.telefone = removeMascaraTelefone(empresa.telefone)\r\n\r\n  return vouDeVanApi.post<EmpresaFormModel>(EMPRESAS, empresa);\r\n}\r\n\r\nexport function editaEmpresa(empresaId: number | string, empresa: EmpresaFormModel) {\r\n  empresa.cnpj = removeMascaraCNPJ(empresa.cnpj);\r\n  empresa.telefone = removeMascaraTelefone(empresa.telefone)\r\n  const uri = EMPRESAS + '/' + empresaId;\r\n  return vouDeVanApi.put<null>(uri, empresa);\r\n}\r\n\r\nexport function deletaEmpresa(empresaId: number | string) {\r\n  const uri = EMPRESAS + '/' + empresaId;\r\n  return vouDeVanApi.delete<null>(uri);\r\n}\r\n\r\nexport function buscaEmpresaPorId(empresaId: number | string) {\r\n  const uri = EMPRESAS + '/' + empresaId;\r\n  return vouDeVanApi.get<EmpresaFormModel>(uri);\r\n}\r\n\r\nexport async function buscaEmpresaParaAutocomplete(termo: string) {\r\n  const response = await vouDeVanApi.get<EmpresaAutocompleteModel[]>(EMPRESAS + \"/busca-para-autocomplete?termo=\" + termo);\r\n  return response.data.map(empresa => {\r\n    return {value: empresa.id, label: `${empresa.id} - ${empresa.nome}`}\r\n  });\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Button, Col, Row} from \"reactstrap\";\r\n\r\nconst AppSaveButton: React.FC<{ isSubmitting: boolean }> = ({isSubmitting}) => {\r\n  return (\r\n    <Row>\r\n      <Col sm={12}><Button\r\n        type=\"submit\"\r\n        color={'success'}\r\n        className={'float-right'}\r\n        disabled={isSubmitting}>\r\n        Salvar\r\n      </Button>\r\n      </Col>\r\n    </Row>);\r\n}\r\n\r\nexport default AppSaveButton;\r\n","import vouDeVanApi from \"../../common/vouDeVanApi\";\r\nimport {LinhaCadastraFormModel, LinhaEditaFormModel} from \"./LinhaModels\";\r\nimport IPage, {IPageRequest} from \"../../common/IPage\";\r\nimport qs from \"qs\";\r\nimport LinhaListagemModel from \"./LinhaListagemModel\";\r\n\r\n\r\nconst LINHAS = '/linhas';\r\n\r\nexport function buscaLinhasPaginadas(pageable: IPageRequest, empresaId: string) {\r\n  return vouDeVanApi.get<IPage<LinhaListagemModel>>(LINHAS, {\r\n    params: {\r\n      ...pageable,\r\n      empresaId\r\n    }\r\n  });\r\n}\r\n\r\nexport function cadastraLinha(model: LinhaCadastraFormModel) {\r\n  return vouDeVanApi.post<{ id: number }>(LINHAS, model);\r\n}\r\n\r\nexport function editaLinha(id: string, model: LinhaEditaFormModel) {\r\n  return vouDeVanApi.put(`${LINHAS}/${id}`, model);\r\n}\r\n\r\nexport function buscaLinhaParaEditar(id: string) {\r\n  return vouDeVanApi.get<LinhaEditaFormModel>(`${LINHAS}/consulta-para-editar/${id}`)\r\n}\r\n\r\nexport function deletaLinha(linhaId: number | string) {\r\n  const uri = LINHAS + '/' + linhaId;\r\n  return vouDeVanApi.delete<null>(uri);\r\n}\r\n","import {\r\n  DiaDaSemana,\r\n  Horario,\r\n  HorariosDaSemanaFormModel,\r\n  LinhaCadastraFormModel\r\n} from \"../../domain/linha/LinhaModels\";\r\nimport {Field, FieldArray} from \"formik\";\r\nimport {Button, Col, Row} from \"reactstrap\";\r\nimport AppInput from \"../../components/AppInput\";\r\nimport React from \"react\";\r\n\r\n\r\nexport default function HorarioDaSemanaForm({formModel}: { formModel: HorariosDaSemanaFormModel }) {\r\n\r\n  const diasDaSemana = [\r\n    {id: 'segunda', nome: \"Segunda-Feira\"},\r\n    {id: 'terca', nome: \"Terça-Feira\"},\r\n    {id: 'quarta', nome: \"Quarta-Feira\"},\r\n    {id: 'quinta', nome: \"Quinta-Feira\"},\r\n    {id: 'sexta', nome: \"Sexta-Feira\"},\r\n    {id: 'sabado', nome: \"Sábado-Feira\"},\r\n    {id: 'domingo', nome: \"Domingo\"},\r\n  ];\r\n\r\n\r\n  return (<>{diasDaSemana.map(diaDaSemana =>\r\n    <div key={diaDaSemana.id}>\r\n      <Row className={\"mt-3\"}>\r\n        <Col sm={12}>\r\n          <h5>{diaDaSemana.nome}</h5>\r\n          <hr/>\r\n        </Col>\r\n      </Row>\r\n      <HorarioComponent diaDaSemana={diaDaSemana} formModel={formModel}/>\r\n    </div>\r\n  )}</>)\r\n\r\n}\r\n\r\n\r\nfunction HorarioComponent({diaDaSemana, formModel}: { diaDaSemana: DiaDaSemana, formModel: LinhaCadastraFormModel | any }) {\r\n  const horarios: Horario[] = formModel[diaDaSemana.id]\r\n\r\n  return <FieldArray name={diaDaSemana.id}>\r\n    {({insert, push, remove}) => {\r\n\r\n      if (horarios.length === 0) {\r\n        push({partida: '', chegada: ''})\r\n      }\r\n\r\n      return (<>\r\n        {horarios.map((horario, index) =>\r\n          <Row key={index} className={\"mb-2\"}>\r\n            <Col sm={6} key={index}>\r\n              <Row>\r\n                <Col sm={2}>\r\n                  <Button type={\"button\"}\r\n                          color={\"success\"}\r\n                          onClick={() => {\r\n                            insert(index + 1, {partida: '', chegada: ''});\r\n                          }}>\r\n                    +\r\n                  </Button>\r\n                </Col>\r\n                <Col sm={10}>\r\n\r\n\r\n                  <AppInput\r\n                    id={`${diaDaSemana.id}.${index}.partida`}\r\n                    placeholder={\"Partida\"}\r\n                    type={'time'}\r\n\r\n                  />\r\n\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n\r\n            <Col sm={6}>\r\n              <Row>\r\n                <Col sm={10}>\r\n\r\n                  <AppInput\r\n                    id={`${diaDaSemana.id}.${index}.chegada`}\r\n                    placeholder={\"Chegada\"}\r\n                    type=\"time\"\r\n                    maxLength={5}\r\n                  />\r\n\r\n                </Col>\r\n                <Col sm={2}>\r\n                  <Button type={\"button\"} color={\"danger\"} onClick={() => remove(index)}>x</Button>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>)}\r\n\r\n      </>)\r\n\r\n\r\n    }}\r\n  </FieldArray>\r\n\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import React from \"react\";\r\nimport AsyncSelect, {AsyncProps} from \"react-select/async\";\r\nimport {useField} from 'formik'\r\nimport {OptionTypeBase} from \"react-select\";\r\n\r\n\r\ninterface Props extends AsyncProps<OptionTypeBase> {\r\n  id: string\r\n\r\n}\r\n\r\nconst AppAutocomplete: React.FC<Props> = ({id, loadOptions}) => {\r\n\r\n  const [field, meta, helpers] = useField(id);\r\n\r\n  return <AsyncSelect\r\n    cacheOptions\r\n    name={field.name}\r\n    id={field.name}\r\n    loadOptions={loadOptions}\r\n    onChange={option => helpers.setValue((option as any).value)}\r\n    onBlur={field.onBlur}\r\n  />\r\n}\r\n\r\nexport default AppAutocomplete;\r\n\r\n","import vouDeVanApi from '../../common/vouDeVanApi';\r\n\r\n\r\nconst CIDADES = '/cidades';\r\n\r\n\r\nexport interface CidadeAutocompleteModel {\r\n  id: number\r\n  nome: string\r\n  estadoUf: string,\r\n}\r\n\r\nexport async function buscaCidadePorNomeParaSelect(nome: string) {\r\n\r\n  const response = await vouDeVanApi.get<CidadeAutocompleteModel[]>(`${CIDADES}/busca-por-nome`, {params: {nome}});\r\n\r\n  return response.data.map(cidade => {\r\n    return {value: cidade.id, label: `${cidade.id} - ${cidade.nome} - ${cidade.estadoUf}`}\r\n  });\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\n\r\nimport {Formik, FormikHelpers} from \"formik\";\r\n\r\n\r\nimport {cadastraLinha} from \"../../domain/linha/LinhaService\";\r\n\r\nimport {RouteComponentProps} from \"react-router\";\r\nimport {LinhaCadastraFormModel} from \"../../domain/linha/LinhaModels\";\r\n\r\nimport AlertModel, {alertFromAxiosError} from \"../../common/AlertModel\";\r\nimport AppPage from \"../../components/AppPage\";\r\nimport {Col, Form, FormGroup, Label, Row} from \"reactstrap\";\r\nimport HorarioDaSemanaForm from \"./HorarioDaSemanaForm\";\r\nimport AppSaveButton from \"../../components/AppSaveButton\";\r\nimport AppAutocomplete from \"../../components/AppAutocomplete\";\r\nimport {buscaEmpresaParaAutocomplete} from \"../../domain/empresa/EmpresaService\";\r\nimport {buscaCidadePorNomeParaSelect} from \"../../domain/cidade/cidadeServices\";\r\n\r\n\r\nexport default function LinhaCadastro({history}: RouteComponentProps) {\r\n  const [alert, setAlert] = useState<AlertModel | undefined>(undefined);\r\n\r\n  const initialValues: LinhaCadastraFormModel = {\r\n    empresaId: '',\r\n    rotaOrigemId: '',\r\n    rotaDestinoId: '',\r\n    segunda: [{partida: '', chegada: '',}],\r\n    terca: [{partida: '', chegada: '',}],\r\n    quarta: [{partida: '', chegada: '',}],\r\n    quinta: [{partida: '', chegada: '',}],\r\n    sexta: [{partida: '', chegada: '',}],\r\n    sabado: [{partida: '', chegada: '',}],\r\n    domingo: [{partida: '', chegada: '',}],\r\n  };\r\n\r\n\r\n  const onSubmit = (linhaFormModel: LinhaCadastraFormModel, {setSubmitting}: FormikHelpers<LinhaCadastraFormModel>) => {\r\n    setAlert(undefined);\r\n    return cadastraLinha(linhaFormModel)\r\n      .then(() => {\r\n        history.push(`/linhas`)\r\n      })\r\n      .catch((e) => {\r\n        setAlert(alertFromAxiosError(e));\r\n        setSubmitting(false);\r\n      });\r\n  }\r\n\r\n  const header = <>Cadastro de Linhas</>;\r\n  return <AppPage\r\n    header={header} alertModel={alert}>\r\n    <Formik<LinhaCadastraFormModel>\r\n      initialValues={initialValues}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({handleSubmit, isSubmitting, values}) => {\r\n        return (<Form onSubmit={handleSubmit}>\r\n          <EmpresaAutoComplete/>\r\n          <RotaDaLinhaComponent/>\r\n          <HorarioDaSemanaForm formModel={values}/>\r\n          <AppSaveButton isSubmitting={isSubmitting}/>\r\n        </Form>);\r\n      }}\r\n    </Formik>\r\n\r\n  </AppPage>;\r\n}\r\n\r\nfunction EmpresaAutoComplete() {\r\n  return (<Row>\r\n    <Col sm={12}>\r\n      <FormGroup>\r\n        <Label for={'empresaId'}>Empresa</Label>\r\n        <AppAutocomplete loadOptions={buscaEmpresaParaAutocomplete} id={'empresaId'}/>\r\n      </FormGroup>\r\n    </Col>\r\n  </Row>);\r\n}\r\n\r\n\r\nfunction RotaDaLinhaComponent() {\r\n  return <Row>\r\n    <Col sm={6}>\r\n      <FormGroup>\r\n        <Label for={'cidade_partida'}>Cidade de Partida</Label>\r\n        <AppAutocomplete loadOptions={buscaCidadePorNomeParaSelect} id={'rotaOrigemId'}/>\r\n      </FormGroup>\r\n    </Col>\r\n\r\n    <Col sm={6}>\r\n      <FormGroup>\r\n        <Label for={'cidade_destino'}>Cidade de Destino</Label>\r\n        <AppAutocomplete loadOptions={buscaCidadePorNomeParaSelect} id={'rotaDestinoId'}/>\r\n      </FormGroup>\r\n    </Col>\r\n  </Row>;\r\n}\r\n\r\n"],"sourceRoot":""}