{"version":3,"sources":["_nav.js","pages/Empresa/routes.ts","pages/Linha/routes.ts","routes.ts","containers/DefaultLayout/DefaultLayout.js"],"names":["items","name","url","icon","EmpresaListagem","lazy","EmpresaEditar","EmpresaCadastrar","RoutesNamed","listagem","editar","cadastrar","routes","path","exact","component","LinhaCadastro","LinhaEdita","EmpresaRoutes","LinhasRoutes","DefaultFooter","React","DefaultHeader","DefaultLayout","e","preventDefault","Auth","instance","logout","this","props","history","push","className","fixed","fallback","AppPageLoading","onLogout","onLogOut","display","navConfig","navigation","router","appRoutes","Container","fluid","map","route","idx","key","render","from","to","Component"],"mappings":"+QAEe,GACbA,MAAO,CACL,CACEC,KAAM,WACNC,IAAK,YACLC,KAAM,sBAER,CACEF,KAAM,SACNC,IAAK,UAELC,KAAM,iBAIR,CACEF,KAAM,cACNC,IAAK,aACLC,KAAM,qB,SCjBNC,EAAkBC,gBAAK,kBAAM,8DAC7BC,EAAgBD,gBAAK,kBAAM,wDAC3BE,EAAmBF,gBAAK,kBAAM,wDAC9BG,EACM,CACRC,SAAU,YACVC,OAAQ,uBACRC,UAAW,uBAYAC,EAPc,CAC3B,CAACC,KAAML,EAAqBC,SAAUK,OAAO,EAAMb,KAAM,WAAYc,UAAWX,GAChF,CAACS,KAAML,EAAqBG,UAAWG,OAAO,EAAMb,KAAM,oBAAqBc,UAAWR,GAC1F,CAACM,KAAML,EAAqBE,OAAQT,KAAM,iBAAkBc,UAAWT,ICfnEU,EAAgBX,gBAAK,kBAAM,+DAC3BY,EAAaZ,gBAAK,kBAAM,iCAUfO,EAPc,CAC3B,CAACC,KAAM,UAAWC,OAAO,EAAMb,KAAM,SAAUc,UAH3BV,gBAAK,kBAAM,gEAI/B,CAACQ,KAAM,mBAAoBC,OAAO,EAAMb,KAAM,oBAAqBc,UAAWC,GAC9E,CAACH,KAAM,qBAAsBC,OAAO,EAAMb,KAAM,wBAAmBc,UAAWE,ICAjEL,EANW,CACxB,CAACC,KAAM,IAAKC,OAAO,EAAMb,KAAM,SADP,mBAErBiB,GAFqB,YAGrBC,I,iBCiBCC,EAAgBC,IAAMhB,MAAK,kBAAM,kCACjCiB,EAAgBD,IAAMhB,MAAK,kBAAM,kCAEjCkB,E,uKAGKC,GACPA,EAAEC,iBACFC,IAAKC,SAASC,SACdC,KAAKC,MAAMC,QAAQC,KAAK,Y,+BAGhB,IAAD,OACP,OACE,yBAAKC,UAAU,OACb,kBAAC,IAAD,CAAWC,OAAK,GACd,kBAAC,WAAD,CAAUC,SAAU,kBAACC,EAAA,EAAD,OAClB,kBAACd,EAAD,CAAee,SAAU,SAAAb,GAAC,OAAI,EAAKc,SAASd,QAGhD,yBAAKS,UAAU,YACb,kBAAC,IAAD,CAAYC,OAAK,EAACK,QAAQ,MACxB,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,WAAD,KACE,kBAAC,IAAD,eAAeC,UAAWC,GAAgBZ,KAAKC,MAA/C,CAAsDY,OAAQA,MAEhE,kBAAC,IAAD,MACA,kBAAC,IAAD,OAEF,0BAAMT,UAAU,QACd,kBAAC,IAAD,CAAeU,UAAW/B,EAAQ8B,OAAQA,IAC1C,kBAACE,EAAA,EAAD,CAAWC,OAAK,GACd,kBAAC,WAAD,CAAUV,SAAU,kBAACC,EAAA,EAAD,OAClB,kBAAC,IAAD,KACGxB,EAAOkC,KAAI,SAACC,EAAOC,GAClB,OAAKD,EAAMhC,UACH,kBAAC,IAAD,CACNkC,IAAKD,EACLnC,KAAMkC,EAAMlC,KACZC,MAAOiC,EAAMjC,MACbb,KAAM8C,EAAM9C,KACZiD,OAAQ,SAAApB,GAAK,OACX,kBAACiB,EAAMhC,UAAce,MAPI,QAU/B,kBAAC,IAAD,CAAUqB,KAAK,IAAIC,GAAG,oBAMhC,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAUjB,SAAU,kBAACC,EAAA,EAAD,OAClB,kBAAChB,EAAD,a,GAnDgBiC,aA2Db9B","file":"static/js/14.b0b1c332.chunk.js","sourcesContent":["\n\nexport default {\n  items: [\n    {\n      name: 'Empresas',\n      url: '/empresas',\n      icon: 'fa fas fa-building'\n    },\n    {\n      name: 'Linhas',\n      url: '/linhas',\n\n      icon: 'fa far fa-map'\n    },\n\n\n    {\n      name: 'Usuários',\n      url: '/dashboard',\n      icon: 'fa fas fa-users'\n    }\n  ],\n};\n","import {lazy} from \"react\";\nimport RouteProps from \"../../common/RoutesProps\";\n\nconst EmpresaListagem = lazy(() => import('./Listagem/index'));\nconst EmpresaEditar = lazy(() => import('./Editar/index'));\nconst EmpresaCadastrar = lazy(() => import('./Cadastrar/index'));\nconst RoutesNamed = {\n  empresas: {\n    listagem: '/empresas',\n    editar: '/empresas/editar/:id',\n    cadastrar: '/empresas/cadastrar',\n  },\n};\n\n\nconst routes: RouteProps[] = [\n  {path: RoutesNamed.empresas.listagem, exact: true, name: 'Empresas', component: EmpresaListagem},\n  {path: RoutesNamed.empresas.cadastrar, exact: true, name: 'Cadastrar Empresa', component: EmpresaCadastrar},\n  {path: RoutesNamed.empresas.editar, name: 'Editar Empresa', component: EmpresaEditar},\n];\n\n\nexport default routes;\n","import {lazy} from \"react\";\nimport RouteProps from \"../../common/RoutesProps\";\n\nconst LinhaCadastro = lazy(() => import('./LinhaCadastro'));\nconst LinhaEdita = lazy(() => import('./LinhaEdita'));\nconst LinhaListagem = lazy(() => import('./LinhaListagem'));\n\nconst routes: RouteProps[] = [\n  {path: '/linhas', exact: true, name: 'Linhas', component: LinhaListagem},\n  {path: '/linhas/cadastro', exact: true, name: 'Cadastro de Linha', component: LinhaCadastro},\n  {path: '/linhas/:id/editar', exact: true, name: 'Edição de Linha', component: LinhaEdita}\n];\n\n\nexport default routes;\n","import RouteProps from \"./common/RoutesProps\";\nimport EmpresaRoutes from './pages/Empresa/routes';\nimport LinhasRoutes from './pages/Linha/routes';\n\nconst routes: RouteProps[] = [\n  {path: '/', exact: true, name: 'Home'},\n  ...EmpresaRoutes,\n  ...LinhasRoutes\n];\n\nexport default routes;\n\n\n","import React, {Component, Suspense} from 'react';\nimport * as router from 'react-router-dom';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {Container} from 'reactstrap';\n\nimport {\n  AppBreadcrumb2 as AppBreadcrumb,\n  AppFooter,\n  AppHeader,\n  AppSidebar,\n  AppSidebarFooter,\n  AppSidebarForm,\n  AppSidebarHeader,\n  AppSidebarMinimizer,\n  AppSidebarNav2 as AppSidebarNav,\n} from '@coreui/react';\n// sidebar nav config\nimport navigation from '../../_nav';\n// routes config\nimport routes from '../../routes';\nimport AppPageLoading from \"../../components/AppPageLoading\";\nimport {Auth} from \"../../domain/auth/Auth\";\n\n\nconst DefaultFooter = React.lazy(() => import('./DefaultFooter'));\nconst DefaultHeader = React.lazy(() => import('./DefaultHeader'));\n\nclass DefaultLayout extends Component {\n\n\n  onLogOut(e) {\n    e.preventDefault()\n    Auth.instance.logout()\n    this.props.history.push('/login')\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <AppHeader fixed>\n          <Suspense fallback={<AppPageLoading/>}>\n            <DefaultHeader onLogout={e => this.onLogOut(e)}/>\n          </Suspense>\n        </AppHeader>\n        <div className=\"app-body\">\n          <AppSidebar fixed display=\"lg\">\n            <AppSidebarHeader/>\n            <AppSidebarForm/>\n            <Suspense>\n              <AppSidebarNav navConfig={navigation} {...this.props} router={router}/>\n            </Suspense>\n            <AppSidebarFooter/>\n            <AppSidebarMinimizer/>\n          </AppSidebar>\n          <main className=\"main\">\n            <AppBreadcrumb appRoutes={routes} router={router}/>\n            <Container fluid>\n              <Suspense fallback={<AppPageLoading/>}>\n                <Switch>\n                  {routes.map((route, idx) => {\n                    if (!route.component) return null;\n                    return (<Route\n                      key={idx}\n                      path={route.path}\n                      exact={route.exact}\n                      name={route.name}\n                      render={props => (\n                        <route.component {...props} />\n                      )}/>);\n                  })}\n                  <Redirect from=\"/\" to=\"/dashboard\"/>\n                </Switch>\n              </Suspense>\n            </Container>\n          </main>\n        </div>\n        <AppFooter>\n          <Suspense fallback={<AppPageLoading/>}>\n            <DefaultFooter/>\n          </Suspense>\n        </AppFooter>\n      </div>\n    );\n  }\n}\n\nexport default DefaultLayout;\n"],"sourceRoot":""}