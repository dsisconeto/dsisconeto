{"version":3,"sources":["components/AppPage.tsx","domain/empresa/EmpresaService.ts","domain/linha/LinhaService.ts","common/IPage.ts","pages/Linha/LinhaListagem.tsx"],"names":["AppPage","header","children","alertModel","className","xs","sm","buscaEmpresasPaginadas","pageable","query","qs","stringify","vouDeVanApi","get","EMPRESAS","removeMascaraCNPJ","cnpj","replaceAll","removeMascaraTelefone","cadastraEmpresa","empresa","telefone","post","editaEmpresa","empresaId","uri","put","deletaEmpresa","delete","buscaEmpresaPorId","buscaEmpresaParaAutocomplete","termo","a","response","data","map","value","id","label","nome","buscaLinhasPaginadas","params","cadastraLinha","model","editaLinha","buscaLinhaParaEditar","deletaLinha","linhaId","LINHAS","createPage","content","number","size","totalElements","totalPages","createPageRequest","page","LinhaListagem","props","useState","isLoading","setIsLoading","setPage","pageRequest","undefined","alert","setAlert","filtroDaListagem","setFiltroDaListagem","useEffect","then","catch","e","alertFromAxiosError","forEach","linhaDto","action","TableActions","onDelete","toString","Header","md","for","cacheOptions","name","loadOptions","onChange","option","noHeader","columns","selector","sortable","width","progressPending","pagination","paginationRowsPerPageOptions","paginationPerPage","striped","paginationServer","paginationTotalRows","onChangeRowsPerPage","_","onChangePage","history","useHistory","color","onClick","push","window","confirm","NovaLinhaButton"],"mappings":"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","file":"static/js/10.c946803d.chunk.js","sourcesContent":["import React, {FC} from \"react\";\r\nimport {Card, CardBody, CardHeader, Col, Row} from \"reactstrap\";\r\nimport AlertModel from \"../common/AlertModel\";\r\nimport AppAlert from \"./AppAlert\";\r\n\r\n\r\ninterface Props {\r\n  header: JSX.Element,\r\n  alertModel?: AlertModel\r\n}\r\n\r\n\r\nconst AppPage: FC<Props> = ({header, children, alertModel}) => {\r\n  return (<div className=\"animated fadeIn\">\r\n    <Row>\r\n      <Col xs=\"12\" sm=\"12\">\r\n        <Card>\r\n          <CardHeader>\r\n            {header}\r\n          </CardHeader>\r\n          <CardBody>\r\n            <AppAlert alertModel={alertModel}/>\r\n            {children}\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </div>);\r\n}\r\n\r\n\r\nexport default AppPage;\r\n\r\n","import vouDeVanApi from '../../common/vouDeVanApi';\r\n\r\nimport qs from 'qs';\r\nimport EmpresaFormModel from './EmpresaFormModel';\r\nimport IPage, {IPageRequest} from '../../common/IPage';\r\nimport EmpresaListagemModel from './EmpresaListagemModel';\r\nimport EmpresaAutocompleteModel from \"./EmpresaAutocompleteModel\";\r\n\r\n\r\nconst EMPRESAS = '/empresas';\r\n\r\n\r\nexport function buscaEmpresasPaginadas(pageable: IPageRequest) {\r\n  const query = qs.stringify(pageable);\r\n  return vouDeVanApi.get<IPage<EmpresaListagemModel>>(EMPRESAS + '?' + query);\r\n}\r\n\r\nfunction removeMascaraCNPJ(cnpj: string) {\r\n  return cnpj.replaceAll('-', '')\r\n    .replaceAll('/', '')\r\n    .replaceAll('.', '');\r\n}\r\n\r\nfunction removeMascaraTelefone(cnpj: string) {\r\n  return cnpj.replaceAll('-', '')\r\n    .replaceAll(' ', '')\r\n    .replaceAll(')', '')\r\n    .replaceAll('(', '');\r\n}\r\n\r\nexport function cadastraEmpresa(empresa: EmpresaFormModel) {\r\n\r\n  empresa.cnpj = removeMascaraCNPJ(empresa.cnpj);\r\n  empresa.telefone = removeMascaraTelefone(empresa.telefone)\r\n\r\n  return vouDeVanApi.post<EmpresaFormModel>(EMPRESAS, empresa);\r\n}\r\n\r\nexport function editaEmpresa(empresaId: number | string, empresa: EmpresaFormModel) {\r\n  empresa.cnpj = removeMascaraCNPJ(empresa.cnpj);\r\n  empresa.telefone = removeMascaraTelefone(empresa.telefone)\r\n  const uri = EMPRESAS + '/' + empresaId;\r\n  return vouDeVanApi.put<null>(uri, empresa);\r\n}\r\n\r\nexport function deletaEmpresa(empresaId: number | string) {\r\n  const uri = EMPRESAS + '/' + empresaId;\r\n  return vouDeVanApi.delete<null>(uri);\r\n}\r\n\r\nexport function buscaEmpresaPorId(empresaId: number | string) {\r\n  const uri = EMPRESAS + '/' + empresaId;\r\n  return vouDeVanApi.get<EmpresaFormModel>(uri);\r\n}\r\n\r\nexport async function buscaEmpresaParaAutocomplete(termo: string) {\r\n  const response = await vouDeVanApi.get<EmpresaAutocompleteModel[]>(EMPRESAS + \"/busca-para-autocomplete?termo=\" + termo);\r\n  return response.data.map(empresa => {\r\n    return {value: empresa.id, label: `${empresa.id} - ${empresa.nome}`}\r\n  });\r\n}\r\n\r\n","import vouDeVanApi from \"../../common/vouDeVanApi\";\r\nimport {LinhaCadastraFormModel, LinhaEditaFormModel} from \"./LinhaModels\";\r\nimport IPage, {IPageRequest} from \"../../common/IPage\";\r\nimport qs from \"qs\";\r\nimport LinhaListagemModel from \"./LinhaListagemModel\";\r\n\r\n\r\nconst LINHAS = '/linhas';\r\n\r\nexport function buscaLinhasPaginadas(pageable: IPageRequest, empresaId: string) {\r\n  return vouDeVanApi.get<IPage<LinhaListagemModel>>(LINHAS, {\r\n    params: {\r\n      ...pageable,\r\n      empresaId\r\n    }\r\n  });\r\n}\r\n\r\nexport function cadastraLinha(model: LinhaCadastraFormModel) {\r\n  return vouDeVanApi.post<{ id: number }>(LINHAS, model);\r\n}\r\n\r\nexport function editaLinha(id: string, model: LinhaEditaFormModel) {\r\n  return vouDeVanApi.put(`${LINHAS}/${id}`, model);\r\n}\r\n\r\nexport function buscaLinhaParaEditar(id: string) {\r\n  return vouDeVanApi.get<LinhaEditaFormModel>(`${LINHAS}/consulta-para-editar/${id}`)\r\n}\r\n\r\nexport function deletaLinha(linhaId: number | string) {\r\n  const uri = LINHAS + '/' + linhaId;\r\n  return vouDeVanApi.delete<null>(uri);\r\n}\r\n","export default interface IPage<T> {\r\n  content: Array<T>,\r\n  size: number,\r\n  number: number,\r\n  totalPages: number,\r\n  totalElements: number,\r\n}\r\n\r\nexport interface IPageRequest {\r\n  page: number,\r\n  size: number\r\n}\r\n\r\nexport function createPage<T>(): IPage<T> {\r\n  return {content: [], number: 0, size: 0, totalElements: 0, totalPages: 0}\r\n}\r\n\r\n\r\nexport function createPageRequest(): IPageRequest {\r\n  return {page: 0, size: 0};\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\nimport {RouteComponentProps} from \"react-router\";\r\nimport AlertModel, {alertFromAxiosError} from \"../../common/AlertModel\";\r\nimport {createPage, createPageRequest, IPageRequest} from \"../../common/IPage\";\r\nimport LinhaListagemModel from \"../../domain/linha/LinhaListagemModel\";\r\nimport {buscaLinhasPaginadas, deletaLinha} from \"../../domain/linha/LinhaService\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Button from \"reactstrap/lib/Button\";\r\nimport AppPage from \"../../components/AppPage\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport {Col, Label, Row} from \"reactstrap\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport {buscaEmpresaParaAutocomplete} from \"../../domain/empresa/EmpresaService\";\r\n\r\ninterface FiltroDaListagem {\r\n  pageRequest: IPageRequest,\r\n  empresaId: string\r\n}\r\n\r\n\r\nexport default function LinhaListagem(props: RouteComponentProps) {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [page, setPage] = useState(createPage<LinhaListagemModel>());\r\n  const [pageRequest, setPageRequest] = useState(createPageRequest());\r\n  const [alert, setAlert] = useState<AlertModel | undefined>(undefined);\r\n  const [filtroDaListagem, setFiltroDaListagem] = useState<FiltroDaListagem>({empresaId: \"\", pageRequest: createPageRequest()});\r\n\r\n  useEffect(() => {\r\n    buscaLinhasPaginadas(filtroDaListagem.pageRequest, filtroDaListagem.empresaId).then(response => {\r\n      setPage(response.data);\r\n      setIsLoading(false);\r\n    }).catch(e => {\r\n      setIsLoading(false);\r\n      setAlert(alertFromAxiosError(e))\r\n    });\r\n\r\n  }, [isLoading, filtroDaListagem]);\r\n\r\n  useEffect(() => {\r\n    page.content.forEach(linhaDto => {\r\n      linhaDto.action = (<TableActions onDelete={() => setIsLoading(true)} linhaId={linhaDto.id.toString()}/>);\r\n    })\r\n  }, [page])\r\n\r\n\r\n  const onChangePage = (page: number, _: number) => {\r\n    filtroDaListagem.pageRequest.page = page;\r\n    setFiltroDaListagem({...filtroDaListagem})\r\n  }\r\n\r\n  const onChangeRowsPerPage = (size: number, _: number) => {\r\n    filtroDaListagem.pageRequest.size = size;\r\n    setFiltroDaListagem({...filtroDaListagem})\r\n  };\r\n\r\n  return <AppPage header={<Header  {...props}/>} alertModel={alert}>\r\n    <Row>\r\n      <Col md={12}>\r\n        <Label for={'empresaId'}>Empresa</Label>\r\n        <AsyncSelect\r\n          cacheOptions\r\n          name=\"empresaId\"\r\n          id=\"empresaId\"\r\n          loadOptions={buscaEmpresaParaAutocomplete}\r\n          onChange={option => {\r\n            filtroDaListagem.empresaId = (option as any).value;\r\n            setFiltroDaListagem({...filtroDaListagem})\r\n          }}\r\n        />\r\n      </Col>\r\n    </Row>\r\n    <DataTable\r\n      noHeader\r\n      columns={colunasDaTabela()}\r\n      data={page.content}\r\n      progressPending={isLoading}\r\n      pagination\r\n      paginationRowsPerPageOptions={[5, 50, 500]}\r\n      paginationPerPage={pageRequest.size}\r\n      striped\r\n      paginationServer\r\n      paginationTotalRows={page.totalElements}\r\n      onChangeRowsPerPage={onChangeRowsPerPage}\r\n      onChangePage={onChangePage}\r\n    />\r\n  </AppPage>;\r\n}\r\n\r\n\r\nfunction colunasDaTabela() {\r\n  return [\r\n    {\r\n      name: '#',\r\n      selector: 'id',\r\n      sortable: false,\r\n      width: '80px',\r\n    },\r\n    {\r\n      name: 'Empresa',\r\n      selector: 'empresaNome',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Origem',\r\n      selector: 'rotaOrigemNome',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Destino',\r\n      selector: 'rotaDestinoNome',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Ações',\r\n      selector: 'action',\r\n      sortable: false,\r\n    },\r\n  ];\r\n}\r\n\r\nfunction TableActions({linhaId, onDelete}: {\r\n  linhaId: string,\r\n  onDelete: () => void\r\n}) {\r\n  const history = useHistory();\r\n\r\n  const onEdit = () => history.push(`/linhas/${linhaId}/editar`);\r\n\r\n  const onClickDelete = () => {\r\n    if (!window.confirm('Confirme que você quer deletar a linha')) return;\r\n    deletaLinha(linhaId).then(() => onDelete());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button color={'primary'} className={'mr-2'} onClick={onEdit}><i className=\"fas fa-pencil-alt\"/></Button>\r\n      <Button color={'danger'} onClick={onClickDelete}><i className=\"fas fa-trash\"/></Button>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction NovaLinhaButton({history}: RouteComponentProps) {\r\n  const onClick = () => history.push('/linhas/cadastro');\r\n  return <Button color={'success'} className={'float-right'} onClick={onClick}>Nova</Button>;\r\n}\r\n\r\nfunction Header(props: RouteComponentProps) {\r\n\r\n  return (<>\r\n    <i className=\"fa fa-align-justify\"/> Linhas\r\n    <NovaLinhaButton {...props}/>\r\n  </>);\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":""}