{"version":3,"sources":["components/AppPage.tsx","common/dataUtils.ts","components/AppSaveButton.tsx","domain/linha/LinhaService.ts","domain/linha/LinhaModels.ts","components/AppInputWithLabel.tsx","pages/Linha/HorarioDaSemanaForm.tsx","pages/Linha/HorariosUnicos.tsx","pages/Linha/validations.ts","../node_modules/reactstrap/es/FormGroup.js","pages/Linha/LinhaEdita.tsx"],"names":["AppPage","header","children","alertModel","className","xs","sm","isBrazilDate","data","DateTime","fromFormat","isValid","toDateIso","brazilDate","toISODate","toBrazilDate","isoDate","fromISO","toFormat","isValidTime","time","AppSaveButton","isSubmitting","type","color","disabled","buscaLinhasPaginadas","filtro","pageRequest","empresaId","vouDeVanApi","get","params","cadastraLinha","model","preparaHorariosDaSemanaFormModel","_","cloneDeep","post","isHorarioValido","horario","partida","chegada","diasUnicos","map","diaUnico","horarios","filter","length","segunda","terca","quarta","quinta","sexta","sabado","domingo","editaLinha","id","put","buscaLinhaParaEditar","deletaLinha","linhaId","uri","LINHAS","delete","criaHorario","criaDiaUnico","AppInputWithLabel","label","props","for","HorarioDaSemanaForm","formModel","nome","diaDaSemana","key","HorarioComponent","name","insert","push","remove","index","onClick","placeholder","mask","HorariosUnicos","diaUnicoIndex","md","HorariosCompnent","horarioIndex","size","offset","horarioValidation","validateTime","Yup","string","optional","test","undefined","object","shape","diaDaSemanaValidation","array","of","diasUnicosValidation","propTypes","PropTypes","node","row","bool","check","inline","tag","tagPropType","cssModule","FormGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","RotaDaLinhaComponent","LinhaEdita","history","match","useState","isLoading","setIsLoading","alert","setAlert","empresaNome","rotaDestinoNome","rotaOrigemNome","initialValues","setInitialValues","validationSchema","useEffect","then","response","forEach","catch","e","alertFromAxiosError","onSubmit","linhaFormModel","setSubmitting","handleSubmit","values"],"mappings":"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","file":"static/js/9.05765b2a.chunk.js","sourcesContent":["import React, {FC} from \"react\";\r\nimport {Card, CardBody, CardHeader, Col, Row} from \"reactstrap\";\r\nimport AlertModel from \"../common/AlertModel\";\r\nimport AppAlert from \"./AppAlert\";\r\n\r\n\r\ninterface Props {\r\n  header: JSX.Element,\r\n  alertModel?: AlertModel\r\n}\r\n\r\n\r\nconst AppPage: FC<Props> = ({header, children, alertModel}) => {\r\n  return (<div className=\"animated fadeIn\">\r\n    <Row>\r\n      <Col xs=\"12\" sm=\"12\">\r\n        <Card>\r\n          <CardHeader>\r\n            {header}\r\n          </CardHeader>\r\n          <CardBody>\r\n            <AppAlert alertModel={alertModel}/>\r\n            {children}\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </div>);\r\n}\r\n\r\n\r\nexport default AppPage;\r\n\r\n","import {DateTime} from \"luxon\";\n\nconst brazilDateFormat = 'dd/MM/yyyy';\n\nexport function isBrazilDate(data: string): boolean {\n  return DateTime.fromFormat(data, brazilDateFormat).isValid\n}\n\nexport function toDateIso(brazilDate: string): string {\n  return DateTime.fromFormat(brazilDate, brazilDateFormat).toISODate() as string\n}\n\nexport function toBrazilDate(isoDate: string): string {\n  return DateTime.fromISO(isoDate).toFormat(brazilDateFormat)\n}\n\nexport function isValidTime(time: string) {\n  return DateTime.fromFormat(time, 'H:mm').isValid\n}\n","import React from \"react\";\r\nimport {Button, Col, Row} from \"reactstrap\";\r\n\r\nconst AppSaveButton: React.FC<{ isSubmitting: boolean }> = ({isSubmitting}) => {\r\n  return (\r\n    <Row>\r\n      <Col sm={12}><Button\r\n        type=\"submit\"\r\n        color={'success'}\r\n        className={'float-right'}\r\n        disabled={isSubmitting}>\r\n        Salvar\r\n      </Button>\r\n      </Col>\r\n    </Row>);\r\n}\r\n\r\nexport default AppSaveButton;\r\n","import vouDeVanApi from \"../../common/vouDeVanApi\";\nimport {Horario, HorariosDaSemanaFormModel, LinhaCadastraFormModel, LinhaEditaFormModel} from \"./LinhaModels\";\nimport IPage from \"../../common/IPage\";\nimport LinhaListagemModel from \"./LinhaListagemModel\";\nimport {FiltroDaListagem} from \"../../pages/Linha/LinhaListagem\";\n\nimport {isBrazilDate, toDateIso, isValidTime} from \"../../common/dataUtils\";\nimport _ from \"lodash\";\n\nconst LINHAS = '/linhas';\n\nexport function buscaLinhasPaginadas(filtro: FiltroDaListagem) {\n  let pageRequest = filtro.pageRequest;\n  let empresaId = filtro.empresaId\n  return vouDeVanApi.get<IPage<LinhaListagemModel>>(LINHAS, {\n    params: {\n      ...pageRequest,\n      empresaId\n    }\n  });\n}\n\nexport function cadastraLinha(model: LinhaCadastraFormModel) {\n  model = _.cloneDeep(model);\n  preparaHorariosDaSemanaFormModel(model);\n  return vouDeVanApi.post<{ id: number }>(LINHAS, model);\n}\n\n\nfunction isHorarioValido(horario: Horario) {\n  return isValidTime(horario.partida) && isValidTime(horario.chegada);\n}\n\nfunction preparaHorariosDaSemanaFormModel(model: HorariosDaSemanaFormModel) {\n  model.diasUnicos = model.diasUnicos\n    .map(diaUnico => {\n      return {...diaUnico, horarios: diaUnico.horarios.filter(isHorarioValido)}\n    })\n    .filter(diaUnico => isBrazilDate(diaUnico.data) && diaUnico.horarios.length !== 0)\n    .map(diaUnico => {\n      return {...diaUnico, data: toDateIso(diaUnico.data)}\n    })\n  model.segunda = model.segunda\n    .filter(isHorarioValido)\n  model.terca = model.terca\n    .filter(isHorarioValido)\n  model.quarta = model.quarta\n    .filter(isHorarioValido)\n  model.quinta = model.quinta\n    .filter(isHorarioValido)\n  model.sexta = model.sexta\n    .filter(isHorarioValido)\n  model.sabado = model.sabado\n    .filter(isHorarioValido)\n  model.domingo = model.domingo\n    .filter(isHorarioValido)\n\n}\n\nexport function editaLinha(id: string, model: LinhaEditaFormModel) {\n  model = _.cloneDeep(model);\n  preparaHorariosDaSemanaFormModel(model)\n  return vouDeVanApi.put(`${LINHAS}/${id}`, model);\n}\n\nexport function buscaLinhaParaEditar(id: string) {\n  return vouDeVanApi.get<LinhaEditaFormModel>(`${LINHAS}/consulta-para-editar/${id}`)\n}\n\nexport function deletaLinha(linhaId: number | string) {\n  const uri = LINHAS + '/' + linhaId;\n  return vouDeVanApi.delete<null>(uri);\n}\n","export interface DiaDaSemana {\n  id: string\n  nome: string\n}\n\nexport interface Horario {\n  partida: string,\n  chegada: string\n}\n\n\nexport function criaHorario(): Horario {\n  return {partida: '', chegada: ''};\n}\n\n\nexport interface DiaUnico {\n  data: string,\n  horarios: Horario[],\n}\n\nexport function criaDiaUnico(): DiaUnico {\n  return {data: \"\", horarios: [{partida: '', chegada: ''}]};\n}\n\nexport interface HorariosDaSemanaFormModel {\n  diasUnicos: DiaUnico[]\n  segunda: Horario[],\n  terca: Horario[],\n  quarta: Horario[],\n  quinta: Horario[],\n  sexta: Horario[],\n  sabado: Horario[],\n  domingo: Horario[],\n}\n\nexport interface LinhaCadastraFormModel extends HorariosDaSemanaFormModel {\n  empresaId: string\n  rotaOrigemId: string,\n  rotaDestinoId: string,\n}\n\n\nexport interface LinhaEditaFormModel extends HorariosDaSemanaFormModel {\n  empresaNome: string\n  rotaOrigemNome: string,\n  rotaDestinoNome: string,\n}\n\n\n","import { FormGroup, Label} from \"reactstrap\";\r\nimport React from \"react\";\r\nimport AppInput, {AppInputModel} from \"./AppInput\";\r\n\r\nexport interface AppInputWithLabelModel extends AppInputModel {\r\n  label: string,\r\n}\r\n\r\n\r\nexport function AppInputWithLabel({label, id, ...props}: AppInputWithLabelModel) {\r\n  return (<>\r\n    <FormGroup>\r\n      <Label for={id} className={\"label-color\"}>{label}</Label>\r\n      <AppInput {...props} id={id}/>\r\n    </FormGroup>\r\n  </>);\r\n\r\n}\r\n","import {\n  DiaDaSemana,\n  Horario,\n  HorariosDaSemanaFormModel,\n  LinhaCadastraFormModel\n} from \"../../domain/linha/LinhaModels\";\nimport {FieldArray} from \"formik\";\nimport {Button, Col, Row} from \"reactstrap\";\nimport AppInput from \"../../components/AppInput\";\nimport React from \"react\";\n\n\nexport default function HorarioDaSemanaForm({formModel}: { formModel: HorariosDaSemanaFormModel }) {\n\n  const diasDaSemana = [\n    {id: 'segunda', nome: \"Segunda-Feira\"},\n    {id: 'terca', nome: \"Terça-Feira\"},\n    {id: 'quarta', nome: \"Quarta-Feira\"},\n    {id: 'quinta', nome: \"Quinta-Feira\"},\n    {id: 'sexta', nome: \"Sexta-Feira\"},\n    {id: 'sabado', nome: \"Sábado-Feira\"},\n    {id: 'domingo', nome: \"Domingo\"},\n  ];\n\n\n  return (<>{diasDaSemana.map(diaDaSemana =>\n    <Row key={diaDaSemana.id} className={\"mt-3\"}>\n      <Col sm={12}>\n        <h5>{diaDaSemana.nome}</h5>\n        <hr/>\n        <HorarioComponent diaDaSemana={diaDaSemana} formModel={formModel}/>\n      </Col>\n    </Row>\n  )}</>)\n\n}\n\n\nfunction HorarioComponent({diaDaSemana, formModel}: { diaDaSemana: DiaDaSemana, formModel: LinhaCadastraFormModel | any }) {\n  const horarios: Horario[] = formModel[diaDaSemana.id]\n\n  return <FieldArray name={diaDaSemana.id}>\n    {({insert, push, remove}) => {\n\n      if (horarios.length === 0) {\n        push({partida: '', chegada: ''})\n      }\n\n      return (<>\n        {horarios.map((horario, index) =>\n          <Row key={index} className={\"mb-2\"}>\n            <Col sm={1}>\n              <Button type={\"button\"}\n                      color={\"success\"}\n                      onClick={() => {\n                        insert(index + 1, {partida: '', chegada: ''});\n                      }}>\n                +\n              </Button>\n            </Col>\n            <Col sm={5}>\n              <AppInput\n                id={`${diaDaSemana.id}[${index}].partida`}\n                placeholder={\"Partida\"}\n                type={'text'}\n                mask={\"99:99\"}\n\n              />\n            </Col>\n\n\n            <Col sm={5}>\n\n              <AppInput\n                id={`${diaDaSemana.id}[${index}].chegada`}\n                placeholder={\"Chegada\"}\n                type={'text'}\n                mask={\"99:99\"}\n\n              />\n\n            </Col>\n            <Col sm={1}>\n              <Button type={\"button\"} color={\"danger\"} onClick={() => remove(index)}>x</Button>\n            </Col>\n\n          </Row>\n        )}\n\n      </>)\n\n\n    }}\n  </FieldArray>\n\n}\n","import React from \"react\";\nimport {criaDiaUnico, criaHorario, DiaUnico, HorariosDaSemanaFormModel} from \"../../domain/linha/LinhaModels\";\nimport {FieldArray} from \"formik\";\nimport {Button, Col, Row} from \"reactstrap\";\nimport AppInput from \"../../components/AppInput\";\n\n\nexport default function HorariosUnicos({formModel}: { formModel: HorariosDaSemanaFormModel }) {\n\n\n  return <>\n    <Row className={\"mt-3\"}>\n      <Col sm={12}>\n        <h5>Dias Únicos</h5>\n        <hr/>\n      </Col>\n    </Row>\n    <FieldArray name={\"diasUnicos\"}>\n      {({insert, push, remove}) => {\n        if (formModel.diasUnicos.length === 0) {\n          push(criaDiaUnico())\n        }\n\n        return formModel.diasUnicos.map((diaUnico, diaUnicoIndex) => {\n\n\n          return <div key={`diasUnicos.${diaUnicoIndex}`}>\n            <Row className={'mb-2'}>\n              <Col md={1}>\n                <Button type={\"button\"}\n                        color={\"success\"}\n                        onClick={() => {\n                          insert(diaUnicoIndex + 1, criaDiaUnico());\n                        }}>\n                  +\n                </Button>\n              </Col>\n              <Col md={10}>\n                <AppInput\n                  id={`diasUnicos[${diaUnicoIndex}].data`}\n                  placeholder={\"Data\"}\n                  mask={\"99/99/9999\"}\n                  type={'text'}\n                />\n              </Col>\n              <Col md={1}>\n                <Button type={\"button\"} color={\"danger\"} onClick={() => remove(diaUnicoIndex)}>x</Button>\n              </Col>\n\n\n            </Row>\n\n            <HorariosCompnent  {...{diaUnicoIndex, diaUnico}}/>\n\n          </div>\n        });\n\n\n      }}\n    </FieldArray>\n  </>\n}\n\n\nfunction HorariosCompnent({diaUnicoIndex, diaUnico}: { diaUnicoIndex: number, diaUnico: DiaUnico }) {\n  return <FieldArray name={`diasUnicos[${diaUnicoIndex}].horarios`}>\n    {({insert, push, remove}) => {\n\n      if (diaUnico.horarios.length === 0) {\n        push(criaDiaUnico())\n      }\n\n      return <div>\n        {\n          diaUnico.horarios.map((_, horarioIndex) =>\n            <Row key={horarioIndex} className={\"mb-2\"}>\n              <Col sm={{size: 1, offset: 2}}>\n                <Button type={\"button\"}\n                        color={\"success\"}\n                        onClick={() => {\n                          insert(horarioIndex + 1, criaHorario());\n                        }}>\n                  +\n                </Button>\n              </Col>\n\n\n              <Col sm={3}>\n                <AppInput\n                  id={`diasUnicos[${diaUnicoIndex}].horarios[${horarioIndex}].partida`}\n                  placeholder={\"Partida\"}\n                  type={'text'}\n                  mask={\"99:99\"}\n                />\n              </Col>\n\n\n              <Col sm={3}>\n\n                <AppInput\n                  id={`diasUnicos[${diaUnicoIndex}].horarios[${horarioIndex}].chegada`}\n                  placeholder={\"Chegada\"}\n                  type={'text'}\n                  mask={\"99:99\"}\n\n                />\n\n              </Col>\n              <Col sm={1}>\n                <Button type={\"button\"} color={\"danger\"}\n                        onClick={() => remove(horarioIndex)}>x</Button>\n              </Col>\n\n            </Row>\n          )\n        }\n      </div>\n    }}\n\n\n  </FieldArray>;\n}\n\n\n\n","import Yup from \"../../common/Yup\";\nimport {isBrazilDate, isValidTime} from \"../../common/dataUtils\";\n\nfunction horarioValidation() {\n\n  const validateTime = Yup.string()\n    .optional()\n    .test('is-valid-time',\n      'Horário é inválido',\n      horario => {\n        if (horario === undefined) return true;\n\n        return horario === '__:__' || isValidTime(horario)\n      }\n    );\n\n  return Yup.object().shape({\n    chegada: validateTime,\n    partida: validateTime\n  });\n}\n\nexport function diaDaSemanaValidation() {\n  return Yup.array().of(horarioValidation());\n\n}\n\nexport function diasUnicosValidation() {\n\n  return Yup.array().of(Yup.object().shape({\n    data: Yup.string()\n      .optional()\n      .test('is-date-valid',\n        'Data inválida',\n        data => {\n          if (data === undefined) return true;\n          return (data === '__/__/____' || isBrazilDate(data))\n        }),\n    horarios: Yup.array().of(horarioValidation())\n  }))\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import React, {useEffect, useState} from \"react\";\n\nimport {Formik, FormikHelpers} from \"formik\";\nimport {buscaLinhaParaEditar, editaLinha} from \"../../domain/linha/LinhaService\";\nimport {RouteComponentProps} from \"react-router\";\nimport {criaDiaUnico, criaHorario, LinhaEditaFormModel} from \"../../domain/linha/LinhaModels\";\n\nimport AlertModel, {alertFromAxiosError} from \"../../common/AlertModel\";\nimport AppPage from \"../../components/AppPage\";\nimport {Col, Form, FormGroup, Row} from \"reactstrap\";\nimport {AppInputWithLabel} from \"../../components/AppInputWithLabel\";\nimport HorarioDaSemanaForm from \"./HorarioDaSemanaForm\";\nimport AppSaveButton from \"../../components/AppSaveButton\";\nimport HorariosUnicos from \"./HorariosUnicos\";\nimport Yup from \"../../common/Yup\";\nimport {diaDaSemanaValidation, diasUnicosValidation} from \"./validations\";\nimport {toBrazilDate} from \"../../common/dataUtils\";\n\ninterface Params {\n  id: string\n}\n\nconst LinhaEdita: React.FC<RouteComponentProps<Params>> = ({history, match}) => {\n  const id: string = match.params.id;\n  const [isLoading, setIsLoading] = useState(true);\n  const [alert, setAlert] = useState<AlertModel | undefined>(undefined);\n\n  const [initialValues, setInitialValues] = useState<LinhaEditaFormModel>({\n    diasUnicos: [criaDiaUnico()],\n    empresaNome: \"\",\n    rotaDestinoNome: \"\",\n    rotaOrigemNome: \"\",\n    segunda: [criaHorario()],\n    terca: [criaHorario()],\n    quarta: [criaHorario()],\n    quinta: [criaHorario()],\n    sexta: [criaHorario()],\n    sabado: [criaHorario()],\n    domingo: [criaHorario()]\n  })\n\n\n  const validationSchema = Yup.object().shape({\n    diasUnicos: diasUnicosValidation(),\n    segunda: diaDaSemanaValidation(),\n    terca: diaDaSemanaValidation(),\n    quarta: diaDaSemanaValidation(),\n    quinta: diaDaSemanaValidation(),\n    sexta: diaDaSemanaValidation(),\n    sabado: diaDaSemanaValidation(),\n    domingo: diaDaSemanaValidation(),\n  });\n\n\n  useEffect(() => {\n    buscaLinhaParaEditar(id)\n      .then(response => {\n        response.data.diasUnicos.forEach(diaUnico => {\n          diaUnico.data = toBrazilDate(diaUnico.data)\n        })\n        setInitialValues(response.data);\n        setIsLoading(false);\n      }).catch((e) => {\n      setAlert(alertFromAxiosError(e))\n    });\n  }, [id])\n\n\n  const onSubmit = (linhaFormModel: LinhaEditaFormModel, {setSubmitting}: FormikHelpers<LinhaEditaFormModel>) => {\n    setAlert(undefined)\n    return editaLinha(id, linhaFormModel)\n      .then(() => {\n        history.push(`/linhas/`)\n      })\n      .catch((e) => {\n        setAlert(alertFromAxiosError(e));\n        setSubmitting(false);\n      });\n  }\n  const header = <>Edita Linhas</>;\n\n  if (isLoading) {\n    return <div/>\n  }\n\n  return <>\n    <AppPage alertModel={alert} header={header}>\n      <Formik<LinhaEditaFormModel>\n        {...{\n          validationSchema,\n          initialValues,\n          onSubmit\n        }}\n      >\n        {({handleSubmit, isSubmitting, values}) => {\n          return (<Form onSubmit={handleSubmit}>\n\n            <Row>\n              <Col sm={12}>\n                <FormGroup>\n                  <AppInputWithLabel\n                    label=\"Empresa\"\n                    id={'empresaNome'}\n                    name={'empresaNome'}\n                    disabled={true}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n\n            <RotaDaLinhaComponent/>\n            <HorarioDaSemanaForm formModel={values}/>\n            <HorariosUnicos formModel={values}/>\n            <AppSaveButton isSubmitting={isSubmitting}/>\n\n          </Form>);\n        }}\n      </Formik>\n    </AppPage>\n  </>;\n};\n\nfunction RotaDaLinhaComponent() {\n\n  return <Row>\n    <Col sm={6}>\n      <FormGroup>\n        <AppInputWithLabel\n          label=\"Cidade de Partida\"\n          id={'rotaOrigemNome'}\n          disabled={true}\n        />\n      </FormGroup>\n    </Col>\n\n    <Col sm={6}>\n      <FormGroup>\n        <AppInputWithLabel\n          label=\"Cidade de Destino\"\n          id={'rotaDestinoNome'}\n          name={'rotaDestinoNome'}\n          disabled={true}\n        />\n      </FormGroup>\n    </Col>\n  </Row>;\n}\n\n\nexport default LinhaEdita;\n"],"sourceRoot":""}