{"version":3,"sources":["components/AppPage.tsx","domain/empresa/EmpresaService.ts","components/AppSaveButton.tsx","domain/linha/LinhaService.ts","pages/Linha/HorarioDaSemanaForm.tsx","components/AppAutocomplete.tsx","domain/cidade/cidadeServices.ts","pages/Linha/LinhaCadastro.tsx"],"names":["AppPage","header","children","alertModel","className","xs","sm","buscaEmpresasPaginadas","pageable","query","qs","stringify","vouDeVanApi","get","EMPRESAS","removeMascaraCNPJ","cnpj","replaceAll","removeMascaraTelefone","cadastraEmpresa","empresa","telefone","post","editaEmpresa","empresaId","uri","put","deletaEmpresa","delete","buscaEmpresaPorId","buscaEmpresaParaAutocomplete","termo","a","response","data","map","value","id","label","nome","AppSaveButton","isSubmitting","type","color","disabled","buscaLinhasPaginadas","LINHAS","cadastraLinha","model","editaLinha","buscaLinhaParaEditar","deletaLinha","linhaId","HorarioDaSemanaForm","formModel","diaDaSemana","key","HorarioComponent","horarios","name","insert","push","remove","length","partida","chegada","horario","index","onClick","placeholder","maxLength","AppAutocomplete","loadOptions","useField","field","helpers","cacheOptions","onChange","option","setValue","onBlur","buscaCidadePorNomeParaSelect","params","cidade","estadoUf","LinhaCadastro","history","useState","undefined","alert","setAlert","initialValues","rotaOrigemId","rotaDestinoId","segunda","terca","quarta","quinta","sexta","sabado","domingo","onSubmit","linhaFormModel","setSubmitting","then","catch","e","alertFromAxiosError","handleSubmit","values","Form","EmpresaAutoComplete","RotaDaLinhaComponent","Row","Col","FormGroup","Label","for"],"mappings":"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","file":"static/js/10.93f30e7f.chunk.js","sourcesContent":["import React, {FC} from \"react\";\nimport {Card, CardBody, CardHeader, Col, Row} from \"reactstrap\";\nimport AlertModel from \"../common/AlertModel\";\nimport AppAlert from \"./AppAlert\";\n\n\ninterface Props {\n  header: JSX.Element,\n  alertModel?: AlertModel\n}\n\n\nconst AppPage: FC<Props> = ({header, children, alertModel}) => {\n  return (<div className=\"animated fadeIn\">\n    <Row>\n      <Col xs=\"12\" sm=\"12\">\n        <Card>\n          <CardHeader>\n            {header}\n          </CardHeader>\n          <CardBody>\n            <AppAlert alertModel={alertModel}/>\n            {children}\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  </div>);\n}\n\n\nexport default AppPage;\n\n","import vouDeVanApi from '../../common/vouDeVanApi';\n\nimport qs from 'qs';\nimport EmpresaFormModel from './EmpresaFormModel';\nimport IPage, {IPageRequest} from '../../common/IPage';\nimport EmpresaListagemModel from './EmpresaListagemModel';\nimport EmpresaAutocompleteModel from \"./EmpresaAutocompleteModel\";\n\n\nconst EMPRESAS = '/empresas';\n\n\nexport function buscaEmpresasPaginadas(pageable: IPageRequest) {\n  const query = qs.stringify(pageable);\n  return vouDeVanApi.get<IPage<EmpresaListagemModel>>(EMPRESAS + '?' + query);\n}\n\nfunction removeMascaraCNPJ(cnpj: string) {\n  return cnpj.replaceAll('-', '')\n    .replaceAll('/', '')\n    .replaceAll('.', '');\n}\n\nfunction removeMascaraTelefone(cnpj: string) {\n  return cnpj.replaceAll('-', '')\n    .replaceAll(' ', '')\n    .replaceAll(')', '')\n    .replaceAll('(', '');\n}\n\nexport function cadastraEmpresa(empresa: EmpresaFormModel) {\n\n  empresa.cnpj = removeMascaraCNPJ(empresa.cnpj);\n  empresa.telefone = removeMascaraTelefone(empresa.telefone)\n\n  return vouDeVanApi.post<EmpresaFormModel>(EMPRESAS, empresa);\n}\n\nexport function editaEmpresa(empresaId: number | string, empresa: EmpresaFormModel) {\n  empresa.cnpj = removeMascaraCNPJ(empresa.cnpj);\n  empresa.telefone = removeMascaraTelefone(empresa.telefone)\n  const uri = EMPRESAS + '/' + empresaId;\n  return vouDeVanApi.put<null>(uri, empresa);\n}\n\nexport function deletaEmpresa(empresaId: number | string) {\n  const uri = EMPRESAS + '/' + empresaId;\n  return vouDeVanApi.delete<null>(uri);\n}\n\nexport function buscaEmpresaPorId(empresaId: number | string) {\n  const uri = EMPRESAS + '/' + empresaId;\n  return vouDeVanApi.get<EmpresaFormModel>(uri);\n}\n\nexport async function buscaEmpresaParaAutocomplete(termo: string) {\n  const response = await vouDeVanApi.get<EmpresaAutocompleteModel[]>(EMPRESAS + \"/busca-para-autocomplete?termo=\" + termo);\n  return response.data.map(empresa => {\n    return {value: empresa.id, label: `${empresa.id} - ${empresa.nome}`}\n  });\n}\n\n","import React from \"react\";\nimport {Button, Col, Row} from \"reactstrap\";\n\nconst AppSaveButton: React.FC<{ isSubmitting: boolean }> = ({isSubmitting}) => {\n  return (\n    <Row>\n      <Col sm={12}><Button\n        type=\"submit\"\n        color={'success'}\n        className={'float-right'}\n        disabled={isSubmitting}>\n        Salvar\n      </Button>\n      </Col>\n    </Row>);\n}\n\nexport default AppSaveButton;\n","import vouDeVanApi from \"../../common/vouDeVanApi\";\nimport {LinhaCadastraFormModel, LinhaEditaFormModel} from \"./LinhaModels\";\nimport IPage, {IPageRequest} from \"../../common/IPage\";\nimport qs from \"qs\";\nimport LinhaListagemModel from \"./LinhaListagemModel\";\n\n\nconst LINHAS = '/linhas';\n\nexport function buscaLinhasPaginadas(pageable: IPageRequest) {\n  const query = qs.stringify(pageable);\n  return vouDeVanApi.get<IPage<LinhaListagemModel>>(LINHAS + '?' + query);\n}\n\nexport function cadastraLinha(model: LinhaCadastraFormModel) {\n  return vouDeVanApi.post<{ id: number }>(LINHAS, model);\n}\n\nexport function editaLinha(id: string, model: LinhaEditaFormModel) {\n  return vouDeVanApi.put(`${LINHAS}/${id}`, model);\n}\n\nexport function buscaLinhaParaEditar(id: string) {\n  return vouDeVanApi.get<LinhaEditaFormModel>(`${LINHAS}/consulta-para-editar/${id}`)\n}\n\nexport function deletaLinha(linhaId: number | string) {\n  const uri = LINHAS + '/' + linhaId;\n  return vouDeVanApi.delete<null>(uri);\n}\n","import {\n  DiaDaSemana,\n  Horario,\n  HorariosDaSemanaFormModel,\n  LinhaCadastraFormModel\n} from \"../../domain/linha/LinhaModels\";\nimport {Field, FieldArray} from \"formik\";\nimport {Button, Col, Row} from \"reactstrap\";\nimport AppInput from \"../../components/AppInput\";\nimport React from \"react\";\n\n\nexport default function HorarioDaSemanaForm({formModel}: { formModel: HorariosDaSemanaFormModel }) {\n\n  const diasDaSemana = [\n    {id: 'segunda', nome: \"Segunda-Feira\"},\n    {id: 'terca', nome: \"Terça-Feira\"},\n    {id: 'quarta', nome: \"Quarta-Feira\"},\n    {id: 'quinta', nome: \"Quinta-Feira\"},\n    {id: 'sexta', nome: \"Sexta-Feira\"},\n    {id: 'sabado', nome: \"Sábado-Feira\"},\n    {id: 'domingo', nome: \"Domingo\"},\n  ];\n\n\n  return (<>{diasDaSemana.map(diaDaSemana =>\n    <div key={diaDaSemana.id}>\n      <Row className={\"mt-3\"}>\n        <Col sm={12}>\n          <h5>{diaDaSemana.nome}</h5>\n          <hr/>\n        </Col>\n      </Row>\n      <HorarioComponent diaDaSemana={diaDaSemana} formModel={formModel}/>\n    </div>\n  )}</>)\n\n}\n\n\nfunction HorarioComponent({diaDaSemana, formModel}: { diaDaSemana: DiaDaSemana, formModel: LinhaCadastraFormModel | any }) {\n  const horarios: Horario[] = formModel[diaDaSemana.id]\n\n  return <FieldArray name={diaDaSemana.id}>\n    {({insert, push, remove}) => {\n\n      if (horarios.length === 0) {\n        push({partida: '', chegada: ''})\n      }\n\n      return (<>\n        {horarios.map((horario, index) =>\n          <Row key={index} className={\"mb-2\"}>\n            <Col sm={6} key={index}>\n              <Row>\n                <Col sm={2}>\n                  <Button type={\"button\"}\n                          color={\"success\"}\n                          onClick={() => {\n                            insert(index + 1, {partida: '', chegada: ''});\n                          }}>\n                    +\n                  </Button>\n                </Col>\n                <Col sm={10}>\n\n\n                  <AppInput\n                    id={`${diaDaSemana.id}.${index}.partida`}\n                    placeholder={\"Partida\"}\n                    type={'time'}\n\n                  />\n\n                </Col>\n              </Row>\n            </Col>\n\n            <Col sm={6}>\n              <Row>\n                <Col sm={10}>\n\n                  <AppInput\n                    id={`${diaDaSemana.id}.${index}.chegada`}\n                    placeholder={\"Chegada\"}\n                    type=\"time\"\n                    maxLength={5}\n                  />\n\n                </Col>\n                <Col sm={2}>\n                  <Button type={\"button\"} color={\"danger\"} onClick={() => remove(index)}>x</Button>\n                </Col>\n              </Row>\n            </Col>\n          </Row>)}\n\n      </>)\n\n\n    }}\n  </FieldArray>\n\n}\n","import React from \"react\";\nimport AsyncSelect, {AsyncProps} from \"react-select/async\";\nimport {useField} from 'formik'\nimport {OptionTypeBase} from \"react-select\";\n\n\ninterface Props extends AsyncProps<OptionTypeBase> {\n  id: string\n\n}\n\nconst AppAutocomplete: React.FC<Props> = ({id, loadOptions}) => {\n\n  const [field, meta, helpers] = useField(id);\n\n  return <AsyncSelect\n    cacheOptions\n    name={field.name}\n    id={field.name}\n    loadOptions={loadOptions}\n    onChange={option => helpers.setValue((option as any).value)}\n    onBlur={field.onBlur}\n  />\n}\n\nexport default AppAutocomplete;\n\n","import vouDeVanApi from '../../common/vouDeVanApi';\n\n\nconst CIDADES = '/cidades';\n\n\nexport interface CidadeAutocompleteModel {\n  id: number\n  nome: string\n  estadoUf: string,\n}\n\nexport async function buscaCidadePorNomeParaSelect(nome: string) {\n\n  const response = await vouDeVanApi.get<CidadeAutocompleteModel[]>(`${CIDADES}/busca-por-nome`, {params: {nome}});\n\n  return response.data.map(cidade => {\n    return {value: cidade.id, label: `${cidade.id} - ${cidade.nome} - ${cidade.estadoUf}`}\n  });\n}\n\n","import React, {useState} from \"react\";\n\nimport {Formik, FormikHelpers} from \"formik\";\n\n\nimport {cadastraLinha} from \"../../domain/linha/LinhaService\";\n\nimport {RouteComponentProps} from \"react-router\";\nimport {LinhaCadastraFormModel} from \"../../domain/linha/LinhaModels\";\n\nimport AlertModel, {alertFromAxiosError} from \"../../common/AlertModel\";\nimport AppPage from \"../../components/AppPage\";\nimport {Col, Form, FormGroup, Label, Row} from \"reactstrap\";\nimport HorarioDaSemanaForm from \"./HorarioDaSemanaForm\";\nimport AppSaveButton from \"../../components/AppSaveButton\";\nimport AppAutocomplete from \"../../components/AppAutocomplete\";\nimport {buscaEmpresaParaAutocomplete} from \"../../domain/empresa/EmpresaService\";\nimport {buscaCidadePorNomeParaSelect} from \"../../domain/cidade/cidadeServices\";\n\n\nexport default function LinhaCadastro({history}: RouteComponentProps) {\n  const [alert, setAlert] = useState<AlertModel | undefined>(undefined);\n\n  const initialValues: LinhaCadastraFormModel = {\n    empresaId: '',\n    rotaOrigemId: '',\n    rotaDestinoId: '',\n    segunda: [{partida: '', chegada: '',}],\n    terca: [{partida: '', chegada: '',}],\n    quarta: [{partida: '', chegada: '',}],\n    quinta: [{partida: '', chegada: '',}],\n    sexta: [{partida: '', chegada: '',}],\n    sabado: [{partida: '', chegada: '',}],\n    domingo: [{partida: '', chegada: '',}],\n  };\n\n\n  const onSubmit = (linhaFormModel: LinhaCadastraFormModel, {setSubmitting}: FormikHelpers<LinhaCadastraFormModel>) => {\n    setAlert(undefined);\n    return cadastraLinha(linhaFormModel)\n      .then(() => {\n        history.push(`/linhas`)\n      })\n      .catch((e) => {\n        setAlert(alertFromAxiosError(e));\n        setSubmitting(false);\n      });\n  }\n\n  const header = <>Cadastro de Linhas</>;\n  return <AppPage\n    header={header} alertModel={alert}>\n    <Formik<LinhaCadastraFormModel>\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n    >\n      {({handleSubmit, isSubmitting, values}) => {\n        return (<Form onSubmit={handleSubmit}>\n          <EmpresaAutoComplete/>\n          <RotaDaLinhaComponent/>\n          <HorarioDaSemanaForm formModel={values}/>\n          <AppSaveButton isSubmitting={isSubmitting}/>\n        </Form>);\n      }}\n    </Formik>\n\n  </AppPage>;\n}\n\nfunction EmpresaAutoComplete() {\n  return (<Row>\n    <Col sm={12}>\n      <FormGroup>\n        <Label for={'empresaId'}>Empresa</Label>\n        <AppAutocomplete loadOptions={buscaEmpresaParaAutocomplete} id={'empresaId'}/>\n      </FormGroup>\n    </Col>\n  </Row>);\n}\n\n\nfunction RotaDaLinhaComponent() {\n  return <Row>\n    <Col sm={6}>\n      <FormGroup>\n        <Label for={'cidade_partida'}>Cidade de Partida</Label>\n        <AppAutocomplete loadOptions={buscaCidadePorNomeParaSelect} id={'rotaOrigemId'}/>\n      </FormGroup>\n    </Col>\n\n    <Col sm={6}>\n      <FormGroup>\n        <Label for={'cidade_destino'}>Cidade de Destino</Label>\n        <AppAutocomplete loadOptions={buscaCidadePorNomeParaSelect} id={'rotaDestinoId'}/>\n      </FormGroup>\n    </Col>\n  </Row>;\n}\n\n"],"sourceRoot":""}