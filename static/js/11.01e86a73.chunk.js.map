{"version":3,"sources":["components/AppPage.tsx","domain/empresa/EmpresaService.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","common/IPage.ts","../node_modules/reactstrap/es/CardHeader.js","pages/Empresa/Listagem/EmpresaListagemView.tsx","pages/Empresa/Listagem/EmpresaListagem.tsx"],"names":["AppPage","header","children","alertModel","className","xs","sm","buscaEmpresasPaginadas","pageable","query","qs","stringify","vouDeVanApi","get","EMPRESAS","removeMascaraCNPJ","cnpj","replaceAll","removeMascaraTelefone","cadastraEmpresa","empresa","telefone","post","editaEmpresa","empresaId","uri","put","deletaEmpresa","delete","buscaEmpresaPorId","buscaEmpresaParaAutocomplete","termo","a","response","data","map","value","id","label","nome","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","createPage","content","number","size","totalElements","totalPages","createPageRequest","page","propTypes","tag","tagPropType","PropTypes","string","cssModule","CardHeader","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","EmpresaListagemView","isLoading","setIsLoading","onChangeRowsPerPage","pageRequest","alert","onChangePage","empresaDto","action","TableActions","onDelete","toString","Header","noHeader","columns","name","selector","sortable","width","progressPending","pagination","paginationRowsPerPageOptions","paginationPerPage","striped","paginationServer","paginationTotalRows","history","useHistory","color","onClick","window","confirm","then","NovaEmpresaButton","EmpresaListagem","useState","setPage","setPageRequest","undefined","setAlert","useEffect","catch","e","alertFromAxiosError","_"],"mappings":"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","file":"static/js/11.01e86a73.chunk.js","sourcesContent":["import React, {FC} from \"react\";\r\nimport {Card, CardBody, CardHeader, Col, Row} from \"reactstrap\";\r\nimport AlertModel from \"../common/AlertModel\";\r\nimport AppAlert from \"./AppAlert\";\r\n\r\n\r\ninterface Props {\r\n  header: JSX.Element,\r\n  alertModel?: AlertModel\r\n}\r\n\r\n\r\nconst AppPage: FC<Props> = ({header, children, alertModel}) => {\r\n  return (<div className=\"animated fadeIn\">\r\n    <Row>\r\n      <Col xs=\"12\" sm=\"12\">\r\n        <Card>\r\n          <CardHeader>\r\n            {header}\r\n          </CardHeader>\r\n          <CardBody>\r\n            <AppAlert alertModel={alertModel}/>\r\n            {children}\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </div>);\r\n}\r\n\r\n\r\nexport default AppPage;\r\n\r\n","import vouDeVanApi from '../../common/vouDeVanApi';\r\n\r\nimport qs from 'qs';\r\nimport EmpresaFormModel from './EmpresaFormModel';\r\nimport IPage, {IPageRequest} from '../../common/IPage';\r\nimport EmpresaListagemModel from './EmpresaListagemModel';\r\nimport EmpresaAutocompleteModel from \"./EmpresaAutocompleteModel\";\r\n\r\n\r\nconst EMPRESAS = '/empresas';\r\n\r\n\r\nexport function buscaEmpresasPaginadas(pageable: IPageRequest) {\r\n  const query = qs.stringify(pageable);\r\n  return vouDeVanApi.get<IPage<EmpresaListagemModel>>(EMPRESAS + '?' + query);\r\n}\r\n\r\nfunction removeMascaraCNPJ(cnpj: string) {\r\n  return cnpj.replaceAll('-', '')\r\n    .replaceAll('/', '')\r\n    .replaceAll('.', '');\r\n}\r\n\r\nfunction removeMascaraTelefone(cnpj: string) {\r\n  return cnpj.replaceAll('-', '')\r\n    .replaceAll(' ', '')\r\n    .replaceAll(')', '')\r\n    .replaceAll('(', '');\r\n}\r\n\r\nexport function cadastraEmpresa(empresa: EmpresaFormModel) {\r\n\r\n  empresa.cnpj = removeMascaraCNPJ(empresa.cnpj);\r\n  empresa.telefone = removeMascaraTelefone(empresa.telefone)\r\n\r\n  return vouDeVanApi.post<EmpresaFormModel>(EMPRESAS, empresa);\r\n}\r\n\r\nexport function editaEmpresa(empresaId: number | string, empresa: EmpresaFormModel) {\r\n  empresa.cnpj = removeMascaraCNPJ(empresa.cnpj);\r\n  empresa.telefone = removeMascaraTelefone(empresa.telefone)\r\n  const uri = EMPRESAS + '/' + empresaId;\r\n  return vouDeVanApi.put<null>(uri, empresa);\r\n}\r\n\r\nexport function deletaEmpresa(empresaId: number | string) {\r\n  const uri = EMPRESAS + '/' + empresaId;\r\n  return vouDeVanApi.delete<null>(uri);\r\n}\r\n\r\nexport function buscaEmpresaPorId(empresaId: number | string) {\r\n  const uri = EMPRESAS + '/' + empresaId;\r\n  return vouDeVanApi.get<EmpresaFormModel>(uri);\r\n}\r\n\r\nexport async function buscaEmpresaParaAutocomplete(termo: string) {\r\n  const response = await vouDeVanApi.get<EmpresaAutocompleteModel[]>(EMPRESAS + \"/busca-para-autocomplete?termo=\" + termo);\r\n  return response.data.map(empresa => {\r\n    return {value: empresa.id, label: `${empresa.id} - ${empresa.nome}`}\r\n  });\r\n}\r\n\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default interface IPage<T> {\r\n  content: Array<T>,\r\n  size: number,\r\n  number: number,\r\n  totalPages: number,\r\n  totalElements: number,\r\n}\r\n\r\nexport interface IPageRequest {\r\n  page: number,\r\n  size: number\r\n}\r\n\r\nexport function createPage<T>(): IPage<T> {\r\n  return {content: [], number: 0, size: 0, totalElements: 0, totalPages: 0}\r\n}\r\n\r\n\r\nexport function createPageRequest(): IPageRequest {\r\n  return {page: 0, size: 5};\r\n}\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import AppPage from \"../../../components/AppPage\";\r\nimport React from \"react\";\r\nimport {RouteComponentProps} from \"react-router\";\r\nimport Button from \"reactstrap/lib/Button\";\r\nimport EmpresaListagemModel from \"../../../domain/empresa/EmpresaListagemModel\";\r\n\r\nimport IPage, {IPageRequest} from \"../../../common/IPage\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport AlertModel from \"../../../common/AlertModel\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {deletaEmpresa} from \"../../../domain/empresa/EmpresaService\";\r\n\r\n\r\ninterface Props extends RouteComponentProps {\r\n  alert?: AlertModel\r\n  isLoading: boolean,\r\n  setIsLoading: (isLoanding: boolean) => void\r\n  page: IPage<EmpresaListagemModel>,\r\n  pageRequest: IPageRequest,\r\n  onChangePage: (page: number, totalRows: number) => void;\r\n  onChangeRowsPerPage: (\r\n    currentRowsPerPage: number,\r\n    currentPage: number\r\n  ) => void\r\n}\r\n\r\nexport function EmpresaListagemView({isLoading, setIsLoading, page, pageRequest, onChangeRowsPerPage, alert, onChangePage, ...props}: Props) {\r\n\r\n\r\n  page.content.forEach(empresaDto => {\r\n    empresaDto.action = (<TableActions onDelete={() => setIsLoading(true)} empresaId={empresaDto.id.toString()}/>);\r\n  })\r\n\r\n  const header = <Header  {...props}/>;\r\n\r\n  return (<AppPage header={header} alertModel={alert}>\r\n    <DataTable\r\n      noHeader\r\n      columns={colunasDaTabela()}\r\n      data={page.content}\r\n      progressPending={isLoading}\r\n      pagination\r\n      paginationRowsPerPageOptions={[5, 50, 500]}\r\n      paginationPerPage={5}\r\n      striped\r\n      paginationServer\r\n      paginationTotalRows={page.totalElements}\r\n      onChangeRowsPerPage={onChangeRowsPerPage}\r\n      onChangePage={onChangePage}\r\n    />\r\n  </AppPage>);\r\n\r\n}\r\n\r\n\r\nfunction colunasDaTabela() {\r\n  return [\r\n    {\r\n      name: '#',\r\n      selector: 'id',\r\n      sortable: false,\r\n      width: '80px',\r\n    },\r\n    {\r\n      name: 'Empresa',\r\n      selector: 'nome',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Representante',\r\n      selector: 'representante',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Telefone',\r\n      selector: 'telefone',\r\n      sortable: false,\r\n    },\r\n\r\n    {\r\n      name: 'Email',\r\n      selector: 'email',\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: 'Ações',\r\n      selector: 'action',\r\n      sortable: false,\r\n    },\r\n\r\n  ];\r\n\r\n}\r\n\r\nfunction TableActions({empresaId, onDelete}: {\r\n  empresaId: string,\r\n  onDelete: () => void\r\n}) {\r\n  const history = useHistory();\r\n\r\n  const onEdit = () => history.push(`/empresas/editar/${empresaId}`);\r\n\r\n  const onClickDelete = () => {\r\n    if (!window.confirm('Confirme que você quer deletar a empresa')) return;\r\n    deletaEmpresa(empresaId).then(() => onDelete());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button color={'primary'} className={'mr-2'} onClick={onEdit}><i className=\"fas fa-pencil-alt\"/></Button>\r\n      <Button color={'danger'} onClick={onClickDelete}><i className=\"fas fa-trash\"/></Button>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nfunction NovaEmpresaButton({history}: RouteComponentProps) {\r\n  const onClick = () => history.push('/empresas/cadastrar');\r\n  return <Button color={'success'} className={'float-right'} onClick={onClick}>Nova</Button>;\r\n}\r\n\r\nfunction Header(props: RouteComponentProps) {\r\n\r\n  return (<>\r\n    <i className=\"fa fa-align-justify\"/> Empresas\r\n    <NovaEmpresaButton {...props}/>\r\n  </>);\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nimport {RouteComponentProps} from 'react-router';\r\nimport {EmpresaListagemView} from \"./EmpresaListagemView\";\r\nimport {createPage, createPageRequest} from \"../../../common/IPage\";\r\nimport EmpresaListagemModel from \"../../../domain/empresa/EmpresaListagemModel\";\r\nimport AlertModel, {alertFromAxiosError} from \"../../../common/AlertModel\";\r\nimport {buscaEmpresasPaginadas} from \"../../../domain/empresa/EmpresaService\";\r\n\r\n\r\nexport default function EmpresaListagem(props: RouteComponentProps) {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [page, setPage] = useState(createPage<EmpresaListagemModel>());\r\n  const [pageRequest, setPageRequest] = useState(createPageRequest());\r\n  const [alert, setAlert] = useState<AlertModel | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    buscaEmpresasPaginadas(pageRequest).then(response => {\r\n      setPage(response.data);\r\n      setIsLoading(false);\r\n    }).catch(e => {\r\n      setIsLoading(false);\r\n      setAlert(alertFromAxiosError(e))\r\n    });\r\n\r\n  }, [pageRequest, isLoading]);\r\n\r\n\r\n  const onChangePage = (page: number, _: number) => {\r\n    setPageRequest({...pageRequest, page})\r\n  }\r\n\r\n  const onChangeRowsPerPage = (size: number, _: number) => {\r\n    setPageRequest({...pageRequest, size})\r\n  };\r\n\r\n  return <EmpresaListagemView\r\n    {...props}\r\n    {...{\r\n      alert,\r\n      page,\r\n      pageRequest,\r\n      isLoading,\r\n      setIsLoading,\r\n      onChangePage,\r\n      onChangeRowsPerPage\r\n    }}\r\n  />\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":""}