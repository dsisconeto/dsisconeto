{"version":3,"sources":["components/AppPage.tsx","domain/empresa/EmpresaService.ts","common/dataUtils.ts","components/AppSaveButton.tsx","domain/linha/LinhaService.ts","domain/linha/LinhaModels.ts","pages/Linha/HorarioDaSemanaForm.tsx","pages/Linha/HorariosUnicos.tsx","pages/Linha/validations.ts","../node_modules/reactstrap/es/FormGroup.js","components/AppAutocomplete.tsx","domain/cidade/cidadeServices.ts","pages/Linha/LinhaCadastro.tsx"],"names":["AppPage","header","children","alertModel","className","xs","sm","buscaEmpresasPaginadas","pageable","query","qs","stringify","vouDeVanApi","get","EMPRESAS","removeMascaraCNPJ","cnpj","replaceAll","removeMascaraTelefone","cadastraEmpresa","empresa","telefone","post","editaEmpresa","empresaId","uri","put","deletaEmpresa","delete","buscaEmpresaPorId","buscaEmpresaParaAutocomplete","termo","a","response","data","map","value","id","label","nome","isBrazilDate","DateTime","fromFormat","isValid","toDateIso","brazilDate","toISODate","toBrazilDate","isoDate","fromISO","toFormat","isValidTime","time","AppSaveButton","isSubmitting","type","color","disabled","buscaLinhasPaginadas","filtro","pageRequest","params","cadastraLinha","model","preparaHorariosDaSemanaFormModel","_","cloneDeep","isHorarioValido","horario","partida","chegada","diasUnicos","diaUnico","horarios","filter","length","segunda","terca","quarta","quinta","sexta","sabado","domingo","editaLinha","buscaLinhaParaEditar","deletaLinha","linhaId","LINHAS","criaHorario","criaDiaUnico","HorarioDaSemanaForm","formModel","diaDaSemana","key","HorarioComponent","name","insert","push","remove","index","onClick","placeholder","mask","HorariosUnicos","diaUnicoIndex","md","HorariosCompnent","horarioIndex","size","offset","horarioValidation","validateTime","Yup","string","optional","test","undefined","object","shape","diaDaSemanaValidation","array","of","diasUnicosValidation","propTypes","PropTypes","node","row","bool","check","inline","tag","tagPropType","cssModule","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","AppAutocomplete","loadOptions","useField","field","meta","helpers","hasError","touched","error","cacheOptions","onChange","option","setValue","onBlur","invalid","style","marginLeft","buscaCidadePorNomeParaSelect","cidade","estadoUf","LinhaCadastro","history","useState","alert","setAlert","initialValues","rotaOrigemId","rotaDestinoId","validationSchema","required","onSubmit","linhaFormModel","setSubmitting","then","catch","e","alertFromAxiosError","handleSubmit","values","Form","EmpresaAutoComplete","RotaDaLinhaComponent","Row","Col","Label","for"],"mappings":"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","file":"static/js/10.6cbed1a0.chunk.js","sourcesContent":["import React, {FC} from \"react\";\r\nimport {Card, CardBody, CardHeader, Col, Row} from \"reactstrap\";\r\nimport AlertModel from \"../common/AlertModel\";\r\nimport AppAlert from \"./AppAlert\";\r\n\r\n\r\ninterface Props {\r\n  header: JSX.Element,\r\n  alertModel?: AlertModel\r\n}\r\n\r\n\r\nconst AppPage: FC<Props> = ({header, children, alertModel}) => {\r\n  return (<div className=\"animated fadeIn\">\r\n    <Row>\r\n      <Col xs=\"12\" sm=\"12\">\r\n        <Card>\r\n          <CardHeader>\r\n            {header}\r\n          </CardHeader>\r\n          <CardBody>\r\n            <AppAlert alertModel={alertModel}/>\r\n            {children}\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </div>);\r\n}\r\n\r\n\r\nexport default AppPage;\r\n\r\n","import vouDeVanApi from '../../common/vouDeVanApi';\r\n\r\nimport qs from 'qs';\r\nimport EmpresaFormModel from './EmpresaFormModel';\r\nimport IPage, {IPageRequest} from '../../common/IPage';\r\nimport EmpresaListagemModel from './EmpresaListagemModel';\r\nimport EmpresaAutocompleteModel from \"./EmpresaAutocompleteModel\";\r\n\r\n\r\nconst EMPRESAS = '/empresas';\r\n\r\n\r\nexport function buscaEmpresasPaginadas(pageable: IPageRequest) {\r\n  const query = qs.stringify(pageable);\r\n  return vouDeVanApi.get<IPage<EmpresaListagemModel>>(EMPRESAS + '?' + query);\r\n}\r\n\r\nfunction removeMascaraCNPJ(cnpj: string) {\r\n  return cnpj.replaceAll('-', '')\r\n    .replaceAll('/', '')\r\n    .replaceAll('.', '');\r\n}\r\n\r\nfunction removeMascaraTelefone(cnpj: string) {\r\n  return cnpj.replaceAll('-', '')\r\n    .replaceAll(' ', '')\r\n    .replaceAll(')', '')\r\n    .replaceAll('(', '');\r\n}\r\n\r\nexport function cadastraEmpresa(empresa: EmpresaFormModel) {\r\n\r\n  empresa.cnpj = removeMascaraCNPJ(empresa.cnpj);\r\n  empresa.telefone = removeMascaraTelefone(empresa.telefone)\r\n\r\n  return vouDeVanApi.post<EmpresaFormModel>(EMPRESAS, empresa);\r\n}\r\n\r\nexport function editaEmpresa(empresaId: number | string, empresa: EmpresaFormModel) {\r\n  empresa.cnpj = removeMascaraCNPJ(empresa.cnpj);\r\n  empresa.telefone = removeMascaraTelefone(empresa.telefone)\r\n  const uri = EMPRESAS + '/' + empresaId;\r\n  return vouDeVanApi.put<null>(uri, empresa);\r\n}\r\n\r\nexport function deletaEmpresa(empresaId: number | string) {\r\n  const uri = EMPRESAS + '/' + empresaId;\r\n  return vouDeVanApi.delete<null>(uri);\r\n}\r\n\r\nexport function buscaEmpresaPorId(empresaId: number | string) {\r\n  const uri = EMPRESAS + '/' + empresaId;\r\n  return vouDeVanApi.get<EmpresaFormModel>(uri);\r\n}\r\n\r\nexport async function buscaEmpresaParaAutocomplete(termo: string) {\r\n  const response = await vouDeVanApi.get<EmpresaAutocompleteModel[]>(EMPRESAS + \"/busca-para-autocomplete?termo=\" + termo);\r\n  return response.data.map(empresa => {\r\n    return {value: empresa.id, label: `${empresa.id} - ${empresa.nome}`}\r\n  });\r\n}\r\n\r\n","import {DateTime} from \"luxon\";\n\nconst brazilDateFormat = 'dd/MM/yyyy';\n\nexport function isBrazilDate(data: string): boolean {\n  return DateTime.fromFormat(data, brazilDateFormat).isValid\n}\n\nexport function toDateIso(brazilDate: string): string {\n  return DateTime.fromFormat(brazilDate, brazilDateFormat).toISODate() as string\n}\n\nexport function toBrazilDate(isoDate: string): string {\n  return DateTime.fromISO(isoDate).toFormat(brazilDateFormat)\n}\n\nexport function isValidTime(time: string) {\n  return DateTime.fromFormat(time, 'H:mm').isValid\n}\n","import React from \"react\";\r\nimport {Button, Col, Row} from \"reactstrap\";\r\n\r\nconst AppSaveButton: React.FC<{ isSubmitting: boolean }> = ({isSubmitting}) => {\r\n  return (\r\n    <Row>\r\n      <Col sm={12}><Button\r\n        type=\"submit\"\r\n        color={'success'}\r\n        className={'float-right'}\r\n        disabled={isSubmitting}>\r\n        Salvar\r\n      </Button>\r\n      </Col>\r\n    </Row>);\r\n}\r\n\r\nexport default AppSaveButton;\r\n","import vouDeVanApi from \"../../common/vouDeVanApi\";\nimport {Horario, HorariosDaSemanaFormModel, LinhaCadastraFormModel, LinhaEditaFormModel} from \"./LinhaModels\";\nimport IPage from \"../../common/IPage\";\nimport LinhaListagemModel from \"./LinhaListagemModel\";\nimport {FiltroDaListagem} from \"../../pages/Linha/LinhaListagem\";\n\nimport {isBrazilDate, toDateIso, isValidTime} from \"../../common/dataUtils\";\nimport _ from \"lodash\";\n\nconst LINHAS = '/linhas';\n\nexport function buscaLinhasPaginadas(filtro: FiltroDaListagem) {\n  let pageRequest = filtro.pageRequest;\n  let empresaId = filtro.empresaId\n  return vouDeVanApi.get<IPage<LinhaListagemModel>>(LINHAS, {\n    params: {\n      ...pageRequest,\n      empresaId\n    }\n  });\n}\n\nexport function cadastraLinha(model: LinhaCadastraFormModel) {\n  model = _.cloneDeep(model);\n  preparaHorariosDaSemanaFormModel(model);\n  return vouDeVanApi.post<{ id: number }>(LINHAS, model);\n}\n\n\nfunction isHorarioValido(horario: Horario) {\n  return isValidTime(horario.partida) && isValidTime(horario.chegada);\n}\n\nfunction preparaHorariosDaSemanaFormModel(model: HorariosDaSemanaFormModel) {\n  model.diasUnicos = model.diasUnicos\n    .map(diaUnico => {\n      return {...diaUnico, horarios: diaUnico.horarios.filter(isHorarioValido)}\n    })\n    .filter(diaUnico => isBrazilDate(diaUnico.data) && diaUnico.horarios.length !== 0)\n    .map(diaUnico => {\n      return {...diaUnico, data: toDateIso(diaUnico.data)}\n    })\n  model.segunda = model.segunda\n    .filter(isHorarioValido)\n  model.terca = model.terca\n    .filter(isHorarioValido)\n  model.quarta = model.quarta\n    .filter(isHorarioValido)\n  model.quinta = model.quinta\n    .filter(isHorarioValido)\n  model.sexta = model.sexta\n    .filter(isHorarioValido)\n  model.sabado = model.sabado\n    .filter(isHorarioValido)\n  model.domingo = model.domingo\n    .filter(isHorarioValido)\n\n}\n\nexport function editaLinha(id: string, model: LinhaEditaFormModel) {\n  model = _.cloneDeep(model);\n  preparaHorariosDaSemanaFormModel(model)\n  return vouDeVanApi.put(`${LINHAS}/${id}`, model);\n}\n\nexport function buscaLinhaParaEditar(id: string) {\n  return vouDeVanApi.get<LinhaEditaFormModel>(`${LINHAS}/consulta-para-editar/${id}`)\n}\n\nexport function deletaLinha(linhaId: number | string) {\n  const uri = LINHAS + '/' + linhaId;\n  return vouDeVanApi.delete<null>(uri);\n}\n","export interface DiaDaSemana {\n  id: string\n  nome: string\n}\n\nexport interface Horario {\n  partida: string,\n  chegada: string\n}\n\n\nexport function criaHorario(): Horario {\n  return {partida: '', chegada: ''};\n}\n\n\nexport interface DiaUnico {\n  data: string,\n  horarios: Horario[],\n}\n\nexport function criaDiaUnico(): DiaUnico {\n  return {data: \"\", horarios: [{partida: '', chegada: ''}]};\n}\n\nexport interface HorariosDaSemanaFormModel {\n  diasUnicos: DiaUnico[]\n  segunda: Horario[],\n  terca: Horario[],\n  quarta: Horario[],\n  quinta: Horario[],\n  sexta: Horario[],\n  sabado: Horario[],\n  domingo: Horario[],\n}\n\nexport interface LinhaCadastraFormModel extends HorariosDaSemanaFormModel {\n  empresaId: string\n  rotaOrigemId: string,\n  rotaDestinoId: string,\n}\n\n\nexport interface LinhaEditaFormModel extends HorariosDaSemanaFormModel {\n  empresaNome: string\n  rotaOrigemNome: string,\n  rotaDestinoNome: string,\n}\n\n\n","import {\n  DiaDaSemana,\n  Horario,\n  HorariosDaSemanaFormModel,\n  LinhaCadastraFormModel\n} from \"../../domain/linha/LinhaModels\";\nimport {FieldArray} from \"formik\";\nimport {Button, Col, Row} from \"reactstrap\";\nimport AppInput from \"../../components/AppInput\";\nimport React from \"react\";\n\n\nexport default function HorarioDaSemanaForm({formModel}: { formModel: HorariosDaSemanaFormModel }) {\n\n  const diasDaSemana = [\n    {id: 'segunda', nome: \"Segunda-Feira\"},\n    {id: 'terca', nome: \"Terça-Feira\"},\n    {id: 'quarta', nome: \"Quarta-Feira\"},\n    {id: 'quinta', nome: \"Quinta-Feira\"},\n    {id: 'sexta', nome: \"Sexta-Feira\"},\n    {id: 'sabado', nome: \"Sábado-Feira\"},\n    {id: 'domingo', nome: \"Domingo\"},\n  ];\n\n\n  return (<>{diasDaSemana.map(diaDaSemana =>\n    <Row key={diaDaSemana.id} className={\"mt-3\"}>\n      <Col sm={12}>\n        <h5>{diaDaSemana.nome}</h5>\n        <hr/>\n        <HorarioComponent diaDaSemana={diaDaSemana} formModel={formModel}/>\n      </Col>\n    </Row>\n  )}</>)\n\n}\n\n\nfunction HorarioComponent({diaDaSemana, formModel}: { diaDaSemana: DiaDaSemana, formModel: LinhaCadastraFormModel | any }) {\n  const horarios: Horario[] = formModel[diaDaSemana.id]\n\n  return <FieldArray name={diaDaSemana.id}>\n    {({insert, push, remove}) => {\n\n      if (horarios.length === 0) {\n        push({partida: '', chegada: ''})\n      }\n\n      return (<>\n        {horarios.map((horario, index) =>\n          <Row key={index} className={\"mb-2\"}>\n            <Col sm={1}>\n              <Button type={\"button\"}\n                      color={\"success\"}\n                      onClick={() => {\n                        insert(index + 1, {partida: '', chegada: ''});\n                      }}>\n                +\n              </Button>\n            </Col>\n            <Col sm={5}>\n              <AppInput\n                id={`${diaDaSemana.id}[${index}].partida`}\n                placeholder={\"Partida\"}\n                type={'text'}\n                mask={\"99:99\"}\n\n              />\n            </Col>\n\n\n            <Col sm={5}>\n\n              <AppInput\n                id={`${diaDaSemana.id}[${index}].chegada`}\n                placeholder={\"Chegada\"}\n                type={'text'}\n                mask={\"99:99\"}\n\n              />\n\n            </Col>\n            <Col sm={1}>\n              <Button type={\"button\"} color={\"danger\"} onClick={() => remove(index)}>x</Button>\n            </Col>\n\n          </Row>\n        )}\n\n      </>)\n\n\n    }}\n  </FieldArray>\n\n}\n","import React from \"react\";\nimport {criaDiaUnico, criaHorario, DiaUnico, HorariosDaSemanaFormModel} from \"../../domain/linha/LinhaModels\";\nimport {FieldArray} from \"formik\";\nimport {Button, Col, Row} from \"reactstrap\";\nimport AppInput from \"../../components/AppInput\";\n\n\nexport default function HorariosUnicos({formModel}: { formModel: HorariosDaSemanaFormModel }) {\n\n\n  return <>\n    <Row className={\"mt-3\"}>\n      <Col sm={12}>\n        <h5>Dias Únicos</h5>\n        <hr/>\n      </Col>\n    </Row>\n    <FieldArray name={\"diasUnicos\"}>\n      {({insert, push, remove}) => {\n        if (formModel.diasUnicos.length === 0) {\n          push(criaDiaUnico())\n        }\n\n        return formModel.diasUnicos.map((diaUnico, diaUnicoIndex) => {\n\n\n          return <div key={`diasUnicos.${diaUnicoIndex}`}>\n            <Row className={'mb-2'}>\n              <Col md={1}>\n                <Button type={\"button\"}\n                        color={\"success\"}\n                        onClick={() => {\n                          insert(diaUnicoIndex + 1, criaDiaUnico());\n                        }}>\n                  +\n                </Button>\n              </Col>\n              <Col md={10}>\n                <AppInput\n                  id={`diasUnicos[${diaUnicoIndex}].data`}\n                  placeholder={\"Data\"}\n                  mask={\"99/99/9999\"}\n                  type={'text'}\n                />\n              </Col>\n              <Col md={1}>\n                <Button type={\"button\"} color={\"danger\"} onClick={() => remove(diaUnicoIndex)}>x</Button>\n              </Col>\n\n\n            </Row>\n\n            <HorariosCompnent  {...{diaUnicoIndex, diaUnico}}/>\n\n          </div>\n        });\n\n\n      }}\n    </FieldArray>\n  </>\n}\n\n\nfunction HorariosCompnent({diaUnicoIndex, diaUnico}: { diaUnicoIndex: number, diaUnico: DiaUnico }) {\n  return <FieldArray name={`diasUnicos[${diaUnicoIndex}].horarios`}>\n    {({insert, push, remove}) => {\n\n      if (diaUnico.horarios.length === 0) {\n        push(criaDiaUnico())\n      }\n\n      return <div>\n        {\n          diaUnico.horarios.map((_, horarioIndex) =>\n            <Row key={horarioIndex} className={\"mb-2\"}>\n              <Col sm={{size: 1, offset: 2}}>\n                <Button type={\"button\"}\n                        color={\"success\"}\n                        onClick={() => {\n                          insert(horarioIndex + 1, criaHorario());\n                        }}>\n                  +\n                </Button>\n              </Col>\n\n\n              <Col sm={3}>\n                <AppInput\n                  id={`diasUnicos[${diaUnicoIndex}].horarios[${horarioIndex}].partida`}\n                  placeholder={\"Partida\"}\n                  type={'text'}\n                  mask={\"99:99\"}\n                />\n              </Col>\n\n\n              <Col sm={3}>\n\n                <AppInput\n                  id={`diasUnicos[${diaUnicoIndex}].horarios[${horarioIndex}].chegada`}\n                  placeholder={\"Chegada\"}\n                  type={'text'}\n                  mask={\"99:99\"}\n\n                />\n\n              </Col>\n              <Col sm={1}>\n                <Button type={\"button\"} color={\"danger\"}\n                        onClick={() => remove(horarioIndex)}>x</Button>\n              </Col>\n\n            </Row>\n          )\n        }\n      </div>\n    }}\n\n\n  </FieldArray>;\n}\n\n\n\n","import Yup from \"../../common/Yup\";\nimport {isBrazilDate, isValidTime} from \"../../common/dataUtils\";\n\nfunction horarioValidation() {\n\n  const validateTime = Yup.string()\n    .optional()\n    .test('is-valid-time',\n      'Horário é inválido',\n      horario => {\n        if (horario === undefined) return true;\n\n        return horario === '__:__' || isValidTime(horario)\n      }\n    );\n\n  return Yup.object().shape({\n    chegada: validateTime,\n    partida: validateTime\n  });\n}\n\nexport function diaDaSemanaValidation() {\n  return Yup.array().of(horarioValidation());\n\n}\n\nexport function diasUnicosValidation() {\n\n  return Yup.array().of(Yup.object().shape({\n    data: Yup.string()\n      .optional()\n      .test('is-date-valid',\n        'Data inválida',\n        data => {\n          if (data === undefined) return true;\n          return (data === '__/__/____' || isBrazilDate(data))\n        }),\n    horarios: Yup.array().of(horarioValidation())\n  }))\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import React from \"react\";\nimport AsyncSelect, {AsyncProps} from \"react-select/async\";\nimport {useField} from 'formik'\nimport {OptionTypeBase} from \"react-select\";\n\n\ninterface Props extends AsyncProps<OptionTypeBase> {\n  id: string\n\n}\n\nconst AppAutocomplete: React.FC<Props> = ({id, loadOptions}) => {\n\n  const [field, meta, helpers] = useField(id);\n  const hasError = (): boolean => {\n    return !!(meta.touched && meta.error);\n  }\n\n  return <>\n    <AsyncSelect\n      cacheOptions\n      name={field.name}\n      id={field.name}\n      loadOptions={loadOptions}\n      onChange={option => helpers.setValue((option as any).value)}\n      onBlur={field.onBlur}\n      invalid={hasError()}\n    />\n\n    {hasError() ? <small style={{marginLeft: '5px'}} className={'text-danger'}>{meta.error}    </small> : null}\n  </>\n}\n\nexport default AppAutocomplete;\n\n","import vouDeVanApi from '../../common/vouDeVanApi';\r\n\r\n\r\nconst CIDADES = '/cidades';\r\n\r\n\r\nexport interface CidadeAutocompleteModel {\r\n  id: number\r\n  nome: string\r\n  estadoUf: string,\r\n}\r\n\r\nexport async function buscaCidadePorNomeParaSelect(nome: string) {\r\n\r\n  const response = await vouDeVanApi.get<CidadeAutocompleteModel[]>(`${CIDADES}/busca-por-nome`, {params: {nome}});\r\n\r\n  return response.data.map(cidade => {\r\n    return {value: cidade.id, label: `${cidade.id} - ${cidade.nome} - ${cidade.estadoUf}`}\r\n  });\r\n}\r\n\r\n","import React, {useState} from \"react\";\n\nimport {Formik, FormikHelpers} from \"formik\";\n\n\nimport {cadastraLinha} from \"../../domain/linha/LinhaService\";\n\nimport {RouteComponentProps} from \"react-router\";\nimport {criaDiaUnico, criaHorario, LinhaCadastraFormModel} from \"../../domain/linha/LinhaModels\";\n\nimport AlertModel, {alertFromAxiosError} from \"../../common/AlertModel\";\nimport AppPage from \"../../components/AppPage\";\nimport {Col, Form, FormGroup, Label, Row} from \"reactstrap\";\nimport HorarioDaSemanaForm from \"./HorarioDaSemanaForm\";\nimport AppSaveButton from \"../../components/AppSaveButton\";\nimport AppAutocomplete from \"../../components/AppAutocomplete\";\nimport {buscaEmpresaParaAutocomplete} from \"../../domain/empresa/EmpresaService\";\nimport {buscaCidadePorNomeParaSelect} from \"../../domain/cidade/cidadeServices\";\nimport HorariosUnicos from \"./HorariosUnicos\";\nimport Yup from \"../../common/Yup\";\nimport {diaDaSemanaValidation, diasUnicosValidation} from \"./validations\";\n\n\nexport default function LinhaCadastro({history}: RouteComponentProps) {\n  const [alert, setAlert] = useState<AlertModel | undefined>(undefined);\n\n  const initialValues: LinhaCadastraFormModel = {\n\n    empresaId: '',\n    rotaOrigemId: '',\n    rotaDestinoId: '',\n    diasUnicos: [criaDiaUnico()],\n    segunda: [criaHorario()],\n    terca: [criaHorario()],\n    quarta: [criaHorario()],\n    quinta: [criaHorario()],\n    sexta: [criaHorario()],\n    sabado: [criaHorario()],\n    domingo: [criaHorario()],\n  };\n\n  const validationSchema = Yup.object().shape({\n    empresaId: Yup.string().required(),\n    rotaOrigemId: Yup.string().required(),\n    rotaDestinoId: Yup.string().required(),\n    diasUnicos: diasUnicosValidation(),\n    segunda: diaDaSemanaValidation(),\n    terca: diaDaSemanaValidation(),\n    quarta: diaDaSemanaValidation(),\n    quinta: diaDaSemanaValidation(),\n    sexta: diaDaSemanaValidation(),\n    sabado: diaDaSemanaValidation(),\n    domingo: diaDaSemanaValidation(),\n  });\n\n\n  const onSubmit = (linhaFormModel: LinhaCadastraFormModel, {setSubmitting}: FormikHelpers<LinhaCadastraFormModel>) => {\n    setAlert(undefined);\n    return cadastraLinha(linhaFormModel)\n      .then(() => {\n        history.push(`/linhas`)\n      })\n      .catch((e) => {\n        setAlert(alertFromAxiosError(e));\n        setSubmitting(false);\n      });\n  }\n\n  const header = <>Cadastro de Linhas</>;\n  return <AppPage\n    header={header} alertModel={alert}>\n    <Formik<LinhaCadastraFormModel>\n      {...{onSubmit, initialValues, validationSchema}}\n    >\n      {({handleSubmit, isSubmitting, values}) =>\n        <Form onSubmit={handleSubmit}>\n          <EmpresaAutoComplete/>\n          <RotaDaLinhaComponent/>\n          <HorarioDaSemanaForm formModel={values}/>\n          <HorariosUnicos formModel={values}/>\n          <AppSaveButton isSubmitting={isSubmitting}/>\n        </Form>\n      }\n    </Formik>\n\n  </AppPage>;\n}\n\nfunction EmpresaAutoComplete() {\n  return (<Row>\n    <Col sm={12}>\n      <FormGroup>\n        <Label for={'empresaId'}>Empresa</Label>\n        <AppAutocomplete loadOptions={buscaEmpresaParaAutocomplete} id={'empresaId'}/>\n      </FormGroup>\n    </Col>\n  </Row>);\n}\n\n\nfunction RotaDaLinhaComponent() {\n  return <Row>\n    <Col sm={6}>\n      <FormGroup>\n        <Label for={'cidade_partida'}>Cidade de Partida</Label>\n        <AppAutocomplete loadOptions={buscaCidadePorNomeParaSelect} id={'rotaOrigemId'}/>\n      </FormGroup>\n    </Col>\n\n    <Col sm={6}>\n      <FormGroup>\n        <Label for={'cidade_destino'}>Cidade de Destino</Label>\n        <AppAutocomplete loadOptions={buscaCidadePorNomeParaSelect} id={'rotaDestinoId'}/>\n      </FormGroup>\n    </Col>\n  </Row>;\n}\n\n"],"sourceRoot":""}